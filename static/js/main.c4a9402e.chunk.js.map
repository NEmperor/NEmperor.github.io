{"version":3,"sources":["views/pc/Timer.module.css","libs/Motion.js","components/Card.js","libs/layout.js","common/Position.js","views/pc/ResultPanel.js","models/controler.js","stores/tableStore.js","common/util.js","components/Sound.js","libs/Clock.js","stores/mockdata.js","views/pc/Debug.js","views/pc/Claim.js","components/AlertForm.js","views/pc/BidPanel.js","views/pc/Headers.js","views/pc/Prepare.js","views/pc/UserTag.js","views/pc/Timer.js","components/Record.js","views/pc/InfoDrawer.js","views/pc/TableView.js","components/Table.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","timername","timer","time","timer1","Motion","props","react_default","a","createElement","es","animation","Object","objectSpread","ease","style","className","children","ACT1","D","L","LC","LCO","Card","handleClick","act","this","onClick","_this2","setActive","active","card","slice","id","index","position","zIndex","y","x","size","getStyle","concat","alt","key","src","width","height","React","Component","createComponents","cards","map","item1","index1","item2","index2","Card_Card","onclick","seat","suits","window","__Card","flexLayout","length","separate","csize","offset","Math","floor","left","Array","fill","item","Position","pos","classCallCheck","sn","toUpperCase","_sn","_in","SNames","indexOf","_en","ENames","_cn","CNames","n","ls","in","getSNames","firstPos","_i","_pos","p","ResultPanel","observer","hideResult","ReactDOM","unmountComponentAtNode","document","querySelector","tableStore","nextGame","result","lineHeight","Cards","W","N","E","S","prototype","remove","val","splice","Player","Current","Record","controler","play","push","_this","dealPlay","openDummy","nextPlayer","suit","rule","render","pc_ResultPanel","next","selectCards","setCardsState","reg","RegExp","replace","delay","setTimeout","dplay","console","log","TableModel","action","bound","_tableId","innerWidth","innerHeight","board","zindex","myseat","deals","initializerDefineProperty","_descriptor","_descriptor2","dummySeat","dealer","logicDealer","sequence","hcp","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","call","data","state","calldata","_descriptor10","reConnect","_descriptor11","_descriptor12","user","ready","name","face","rank","split","forEach","___tableStore","toJS","scene","first","note","claim","msg","contract","winEW","winSN","vulnerable","curCall","sdeals","reset","arguments","undefined","s","i","top","duration","showBlock","hideLastTrick","bidState","showBid","InfoDrawer","_this3","rotate","_ref","transformOrigin","resetCards","getCardByIndex","_preplay","_play","bind","ucard","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","c","value","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","restore0","initCards","dealCards","restore1","restore_2","userCards","restore2","board1","_this4","openSeat","cardNum","uCards","uindex","___card","_setCardACT3","seatIndex","_setCardACT2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","pre","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","isAnim","clearBoard","unshift","assign","selectCardsByAct","___cards1","actlist","destCards","ucards","userSeats","seats","keys","center","resetDelay","ps","layout","shift","preCard","offsetTop","offsetLeft","claimMsg","number","unPlayCardNumber","i1","i2","_setShowLastTrick","lastTrick","isShow","_this5","lt","___board1","_showLastTrick","time1","clearTimeout","_hideLastTrick","_this6","_this7","dcards","ew","arr","sw","se","values","el","_result","_this8","_csize","observable","claimAble","debug","declarer","auction","tricks","computed","_this9","resetTable","GameProcess","_this10","history","_this11","stores_tableStore","RightMove","num","pop","_setPreLoad","img","Sound","file","innerHTML","Clock","possibleConstructorReturn","getPrototypeOf","timing","callback","clearInterval","_clock","setState","color1","color2","setInterval","clock","svg","animationFillMode","dangerouslySetInnerHTML","__html","restoreData","callData1","callData2","Debug","o","timing11","src_libs_Clock","unseat","lshift","testClock","test1","testActive","showTableId","alert","tableId","test3","testDummy","testDummy1","seat1","dCards","testLastTrick","testBid1","testBid2","testUsersReady","login","uname","testChat","elMsg","elSay","addClick","addClick1","testSeat","border","dv1","restore","___board","wLogin","userLogin","initcards","deal","bid","showResult","Claim","inject","submit","handleSubmit","handleSubmit1","getUnPlayCardNumber","cblocks","_","Claim_Cblock","clear","disabled","buttons","myClaim","otherClaim","oClaim","Cblock","brightness","backgroundColor","AlertForm","_useState","useState","_useState2","slicedToArray","setIsShow","msgRef","useRef","cb","useCallback","current","modal","title","visible","mask","closable","onOk","onCancel","footer","es_button","type","input","ref","placeholder","BidPanel","bidblocks","bidcards","calling","bidMsg","handleCall","_bidblock","_bidcard","e","j","row","col","handleConfirm","handleReset","initPanel","screen","__BID","assertThisInitialized","bids","e1","createRef","atDisposer","reaction","fireImmediately","_this$props$tableStor","lsto","cn","header","rows","e2","BidPanel_BidBlock","getCallRows","BidCards","react","BidPanel_BidCard","opPad","components_AlertForm","BidBlock","T","H","C","preventDefault","BidCard","PASS","X","XX","ALERT","Seats","vuls","EW","SN","vul","Tricks","defaultProps","Prepare","clsName","ArrPrepare","ind","cls","UserTag","seName","noLogin","UserTags","_ref$hcp","userN","userE","userS","userW","showhcp","Fragment","UserTag_UserTag","Timer","start","defineProperty","sec","stop","hour","min","ewTime","snTime","h","parseInt","defaltProps","Option","Select","club","diamond","heart","spade","DefalutCards","display","callData","callColumns","dataIndex","align","resultColumns","processColumns","processData","Play","showDrawer","showHistory","onClose","hideHistory","handleChange","record","record_result","margin","drawer","placement","bodyStyle","span","Record_Result","Record_Cards","es_select","defaultValue","onChange","Record_Bid","Record_PlayProcess","CARDS","textAlign","resultData","ew_point","ns_point","nsimp","ewimp","Result","es_table","rowClassName","columns","dataSource","bordered","pagination","Bid","PlayProcess","toggleInfo","views_pc_BidPanel","bottom","InfoDrawer_LastTricks","LastTricks","bSize","seatPos","lef","components_Card","TableView","table","__tableStore","stat","claimBtnClickable","openDebug","Headers_Seats","Headers_Tricks","Timer_Timer","handle","showInfo","views_pc_Claim","onSubmit","handleClaim","views_pc_UserTag","views_pc_Prepare","handleReady","Debug_Debug","components_Record","views_pc_InfoDrawer","Table","preplay","userReady","userAllReady","autoCall","toggleLastTrick","toggleBid","recovery","_initSeat","__INITSEAT","clientHeight","clientWidth","initSeat","channel","streamApi","views_pc_TableView","Game","init","__debug","r","cardImgs","match","params","tableid","oncontextmenu","ondragstart","onselectstart","onkeydown","keycode","event","keyCode","which","returnValue","components_Table","stores","App","index_module","react_router_dom","react_router","path","component","Boolean","location","hostname","src_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4a9402e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timername\":\"Timer_timername__3QH12\",\"timer\":\"Timer_timer__2p0N2\",\"time\":\"Timer_time__LFv_6\",\"timer1\":\"Timer_timer1__1cv1r\"};","import React from 'react';\nimport TweenOne from 'rc-tween-one';\n\n/**\n * 对动画组件的封装。考虑以后也许会用其他的动画替代\n */\nexport default (props) => (\n  <TweenOne\n    animation={{\n      ...props.animation,\n      ease: 'easeOutQuint',       // 缓动参数 参考蚂蚁手册 easeOutExpo\n    }}\n    style={props.style ? props.style : null}\n    className={props.className ? props.className : null}\n  >\n    {props.children}\n  </TweenOne>\n)","import React from 'react';\r\nimport Motion from '../libs/Motion'\r\n//import TweenOne from 'rc-tween-one';\r\n//* active define 0,1,2,3  0 灰色不能点，1 亮色不能点，2 亮色能点, 3 亮色能点突出\r\n// D dark, L light,LC light click,LCO light click out\r\nconst ACT0 = 0;                             // initCards\r\nconst ACT1 = { D: 1, L: 2, LC: 3, LCO: 4 }  // dealCards\r\nconst ACT2 = 5;                             // play() in board\r\nconst ACT3 = 6;                             // out of Screen\r\n\r\n/**\r\n * 一张牌 Card 的功能：\r\n *      初始位置：props.position\r\n *      如何动画：props.animation\r\n *      牌的名称：5S  XS 代表背面\r\n *      牌的状态：4个状态：0灰色不能点,1亮色不能点，2亮色能点，3亮色能点突出\r\n *      \r\n * \r\n * props 说明\r\n *      animation   和 TweenOne 的 animation 同步\r\n *      position    非动画定位\r\n *      size        大小\r\n *      card        5S 黑桃5\r\n *      zIndex      叠放顺序\r\n *      onClick     点击绑定到图片上, onclick() 函数执行返回的是一个函数引用。\r\n *      active      0,1,2  0 灰色不能点，1 亮色不能点，2 亮色能点, 3 亮色能点突出\r\n * \r\n * 关于动画：\r\n *      分装在 ../lib/Motion\r\n * \r\n * 存在问题：\r\n * \r\n *      X 代表扣着，可能暴露扣着牌的花色数量，比如：XHXHXH,XDXD,XSXSXS  \r\n*/\r\nclass Card extends React.Component {\r\n    handleClick = () => false;\r\n    setActive(act) {\r\n        switch (act) {\r\n            case ACT1.D:\r\n                this.props.animation && (this.props.animation['brightness'] = 0.6);\r\n                break;\r\n            case ACT1.L:\r\n                this.props.animation && (this.props.animation['brightness'] = 1)\r\n                break;\r\n            case ACT1.LC:\r\n            case ACT1.LCO:\r\n                this.handleClick = this.props.onClick;\r\n                this.props.animation && (this.props.animation['brightness'] = 1)\r\n                break;\r\n            case ACT2:\r\n            case ACT3:\r\n                this.handleClick = () => false;\r\n                this.props.animation && (this.props.animation['brightness'] = 1)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render() {\r\n        // 非动画样式，如果有给出就调整，如果没有给出，就不变。\r\n        const getStyle = () => {\r\n            let style = { position: 'absolute' }\r\n            if (this.props.position) {\r\n                style['top'] = this.props.position.y + 'px'\r\n                style['left'] = this.props.position.x + 'px'\r\n            }\r\n            if (this.props.size) {\r\n                style['height'] = this.props.size * 1;\r\n                style['width'] = this.props.size * 0.7;\r\n            }\r\n            return style;\r\n        }\r\n        // 根据 active 调整 card 的状态。影响显示和点击\r\n        this.setActive(this.props.active);\r\n        const card = this.props.card.slice(-1) === 'X' ?   // XH  XS XD 都是扣着的\r\n            'back' : this.props.card;\r\n\r\n\r\n        return (\r\n            <div id={'card' + this.props.index}  // TODO: 这个div定位不理想，只是起到了 zIndex 作用。\r\n                style={{\r\n                    position: 'absolute',\r\n                    zIndex: this.props.zIndex,\r\n                }}\r\n            >\r\n                <Motion animation={this.props.animation} style={getStyle()}>\r\n                    <img onClick={this.handleClick(`${this.props.index}`)}\r\n                        // onDragStart={(e)=>e.preventDefault()}\r\n                        alt={this.props.key}\r\n                        src={`cards/${card}.svg`}\r\n                        style={{\r\n                            position: 'absolute',\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            // zIndex: this.props.zIndex,\r\n                        }}\r\n                    />\r\n                </Motion>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/**\r\n * 用于从 模型的数组 cards 返回 React 组件数组。\r\n */\r\nCard.createComponents = function (cards) {\r\n    return cards.map((item1, index1) => {\r\n        return item1.map((item2, index2) => {\r\n            return <Card\r\n                active={item2.active}\r\n                onClick={item2.onclick}\r\n                key={item2.key}\r\n                index={item2.key}\r\n                seat={item2.seat}\r\n                animation={item2.animation || ''}\r\n                card={item2.card}\r\n                size={item2.size}\r\n                position={item2.position}\r\n                zIndex={item2.zIndex}\r\n            />\r\n        });\r\n    });\r\n}\r\nCard.suits = ['S', 'H', 'C', 'D']; window.__Card=Card\r\n\r\nexport default Card\r\nexport {ACT0,ACT1,ACT2,ACT3}\r\n\r\n","/**\n * 布局 函数库。\n * \n * todo:\n * 这里函数暂时与扑克无关，纯粹数学计算。\n * 考虑另外封装，专门针对扑克布局的函数库。\n */\n\n\n/**\n * 重新整理手里的牌（调整间距）\n * \n * 输入：\n *    cards       一手牌\n *    seatIndex   当前牌的方位号\n * \n * 输出：\n *    cards       定位重新排列的一手牌\n * pos：left 上下 top 左右\n * flexLayout： 获得重新的布局分布 参数 2 每间隔2张牌 增大一些距离\n * Array.shift() 从开头弹出一个值\n */\nfunction resetCards(cards, seatIndex, resetDelay = false) {\n  const pos = [0, 2].indexOf(seatIndex) === -1 ? 'left' : 'top';\n  let length = 0;\n  let ps = 0;\n  cards.forEach(card => card.active === 2 && length++)\n  const layout = flexLayout(this.height, length, 2)\n  return cards.map((card, index) => {\n    if (card.active === 2) {\n      ps = layout.shift();\n      card['animation'][pos] = ps;\n      card['animation']['duration'] = 600;\n      if (resetDelay) card['animation']['delay'] = ps;\n      //if (resetDelay) card['animation']['delay'] = 0;\n    }\n    return card;\n  })\n}\n\nfunction suitLayoutCards(cards, seatIndex) {\n  //const rotate = [0, 2].indexOf(seatIndex) == -1 ? '0' : '-90';\n  const rotate = 0;\n  let preCard = cards[0];\n  let offsetTop = 0;\n  let offsetLeft = 0;\n  let seat = ['east', 'south', 'west', 'north'][seatIndex];\n  cards.map((card, index) => {\n    if (card.card.slice(1, 2) != preCard.card.slice(1, 2)) {\n      offsetTop += 40;\n      offsetLeft = 0;\n      card.animation['top'] += offsetTop;\n      //card.animation['left'] += this.seat[seat][0].x\n    } else {\n      card.animation['left'] += offsetLeft;\n      card.animation['top'] += offsetTop;\n      offsetLeft += 25;\n    }\n    card.animation['rotate'] = rotate;\n    preCard = card;\n  })\n}\n\n\n\n\n\n/**\n * 输入：\n *    width     牌桌宽度（高度同理） 有了宽度，就有了扑克的宽度。w*0.18\n *    length    多少张牌\n *    separate  每几张扩大间隔。\n * \n * 输出：\n *    扑克整体左上角定位\n *    所有扑克定位（xy）数组 更新 animation\n * \n * 参考：\n *    csize =  width * 0.18\n *    sepY  =  csize*0.15  sepX =  csize*0.39   \n *    csize 牌的长度 csize*0.7 牌的宽度\n *    sepOffset = 逐渐增加的宽度值 0.05 是一个比例。需要乘 csize\n *    cwidth 一手牌整体宽度\n *    left 一手牌 举例牌桌左侧的举例\n * \n * 算法描述：\n *    1 发牌区域总宽度\n *    2 根据牌间距，算出牌总宽度。\n *    3 算出牌居中左侧的left数值。\n *    4 逐个增加间距即可。\n * \n *    间距调整，根据牌每隔n张，计算出少于几张时 增加几倍递增宽度。\n */\nfunction flexLayout(width, length, separate) {\n  const csize = width * 0.18\n  const sepOffset = Math.floor((13 - length) / separate) * 0.05\n  const offset = csize * (0.22 + sepOffset);\n  const cwidth = offset * (length - 1) + csize * 0.7;\n  const left = (width - cwidth) / 2;\n  return Array(length).fill(0).map((item, index) => item + left + index * offset);\n}\n\nfunction suitLayout(width, ) {\n\n}\n\n\n\n/**\n * 单元测试\n */\nfunction test_flexLayout() {\n  const width = 463;\n  const length = 13;\n  const separate = 15;\n  console.log(\"flexLayout:\", flexLayout(width, length, separate))\n}\n//test_flexLayout();\nfunction testFunc(a,b){\n  return a + b;\n}\nexport {testFunc}\nexport { flexLayout, resetCards, suitLayoutCards };\n\n\n\n","class Position {\n  constructor(pos) {\n    if (typeof (pos) === 'string') {\n      const sn = pos[0].toUpperCase();\n      this._sn = sn;\n      this._in = Position.SNames.indexOf(sn);\n      this._en = Position.ENames[this._in];\n      this._cn = Position.CNames[this._in];\n    } else if (typeof (pos) === 'number') {\n      if (pos > 3) return false;\n      this._in = pos;\n      this._en = Position.ENames[pos];\n      this._sn = Position.SNames[pos];\n      this._cn = Position.CNames[pos];\n    }\n  }\n  /**\n   * 当前位置左移 n 次，返回移动后的位置对象。\n   * 当前对象改变。\n   * @param {*} n \n   */\n  lshift(n) {\n    const pos = [0,3,2,1,0,3,2,1];\n    const ls = n % 4;\n    this._in = pos[pos.indexOf(this._in) + ls];\n    // let pos = null;\n    // if (this._in === 0) this._in = 3 - n + 1;\n    // else this._in -= n;\n    this._en = Position.ENames[this._in];\n    this._sn = Position.SNames[this._in];\n    this._cn = Position.CNames[this._in];\n    return this;\n  }\n  rshift(n) {\n    const pos = [0,1,2,3,0,1,2,3];\n    const ls = n % 4;\n    this._in = pos[this._in + ls];\n    // let pos = null;\n    // if (this._in === 0) this._in = 3 - n + 1;\n    // else this._in -= n;\n    this._en = Position.ENames[this._in];\n    this._sn = Position.SNames[this._in];\n    this._cn = Position.CNames[this._in];\n    return this;\n  }\n\n  /**\n   * 从当前位置 到 pos 需要 左移几次\n   * 返回左移的次数。\n   */\n  lsto(pos) {\n    if(pos===null) return 0;\n    if(typeof(pos)==='string') pos = new Position(pos);\n    if (pos.in > this._in) return 4 - (pos.in - this._in);\n    else return this._in - pos.in;\n  }\n\n  get sn() {\n    return this._sn;\n  }\n  get en() {\n    return this._en;\n  }\n  get cn() {\n    return this._cn;\n  }\n  get in() {\n    return this._in;\n  }\n  valueOf() {\n    return this._in;\n  }\n  toString() {\n    return Position.SNames[this._in - 1];\n  }\n}\nPosition.SNames = 'NESW';\nPosition.ENames = ['north', 'east', 'south', 'west'];\nPosition.CNames = ['北', '东', '南', '西'];\nPosition.getSNames = (firstPos) =>{\n  const pos = ['NESW','ESWN','SWNE','WNES'];\n  for(let p of pos){\n    if(p.slice(0,1)===firstPos.toUpperCase()) return p;\n  }\n}\nexport default Position;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport tableStore from '../../stores/tableStore';\r\nimport { observer } from 'mobx-react';\r\n\r\n\r\n@observer\r\nclass ResultPanel extends React.Component {\r\n  /**\r\n    * 隐藏比赛结果\r\n    */\r\n  hideResult = () => {\r\n    ReactDOM.unmountComponentAtNode(document.querySelector('#result'));\r\n    tableStore.nextGame()\r\n  }\r\n  render() {\r\n    const height = tableStore.height;\r\n    const result = tableStore.result;\r\n    return (\r\n      <div className='resultmask'>\r\n        <div className='result'>\r\n          <img src={`cards/medal.svg`} width=\"20%\" />\r\n          <div style={{ lineHeight: height * 0.12 + 'px', }}>{result}</div>\r\n          <button onClick={this.hideResult}>下一副</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultPanel;","/**  W N E S\r\n * \"[[\"S5\", \"S4\", \"S3\", \"S2\", \"H5\", \"H4\", \"H3\", \"D5\", \"D4\", \"D3\", \"C5\", \"C4\", \"C3\"], \r\n *   [\"S8\", \"S7\", \"S6\", \"HA\", \"HK\", \"HQ\", \"DA\", \"DK\", \"DQ\", \"CA\", \"CK\", \"CQ\", \"C2\"],\r\n *   [\"SJ\", \"ST\", \"S9\", \"HJ\", \"HT\", \"H9\", \"DJ\", \"DT\", \"D9\", \"D2\", \"CJ\", \"CT\", \"C9\"], \r\n *   [\"SA\", \"SK\", \"SQ\", \"H8\", \"H7\", \"H6\", \"H2\", \"D8\", \"D7\", \"D6\", \"C8\", \"C7\", \"C6\"]\r\n * ]\"\r\n * \r\n * N E S W\r\n * const deals = 'K34.J3.Q742.K832 XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX';\r\n */\r\nimport ReactDOM from 'react-dom';\r\nimport React, { Component } from 'react';\r\nimport tableStore from '../stores/tableStore';\r\nimport  { ACT1 } from '../components/Card';\r\nimport ResultPanel from '../views/pc/ResultPanel';\r\nconst Cards = {\r\n    W:[\"S5\", \"S4\", \"S3\", \"S2\", \"H5\", \"H4\", \"H3\", \"D5\", \"D4\", \"D3\", \"C5\", \"C4\", \"C3\"],\r\n    N:[\"S8\", \"S7\", \"S6\", \"HA\", \"HK\", \"HQ\", \"DA\", \"DK\", \"DQ\", \"CA\", \"CK\", \"CQ\", \"C2\"],\r\n    E:[\"SJ\", \"ST\", \"S9\", \"HJ\", \"HT\", \"H9\", \"DJ\", \"DT\", \"D9\", \"D2\", \"CJ\", \"CT\", \"C9\"],\r\n    S:[\"SA\", \"SK\", \"SQ\", \"H8\", \"H7\", \"H6\", \"H2\", \"D8\", \"D7\", \"D6\", \"C8\", \"C7\", \"C6\"]\r\n}\r\nArray.prototype.remove = function(val) {\r\n    var index = this.indexOf(val);\r\n    if (index > -1) {\r\n        this.splice(index, 1);\r\n    }\r\n};\r\nconst Player = [\"E\",\"S\",\"W\",\"N\"]\r\nlet Current = [];\r\n\r\nlet Record = []\r\nclass GameProcess {\r\n    start(){\r\n        console.log(\"start\")\r\n        tableStore.dplay(\"W\", \"S5\");\r\n        \r\n    }\r\n    play = (item)=>{\r\n        const {card,seat} = item\r\n        Current.push(card)\r\n        Record.push(card)\r\n        this.dealPlay(seat,card)\r\n    }\r\n\r\n    dealPlay = (seat,card) =>{\r\n        Cards[seat].remove(card)\r\n       if(Record.length===1) tableStore.openDummy(\"N\",[\"S8\", \"S7\", \"S6\", \"HA\", \"HK\", \"HQ\", \"DA\", \"DK\", \"DQ\", \"CA\", \"CK\", \"CQ\", \"C2\"])\r\n       if(Current.length === 4) Current = [];\r\n       let nextPlayer = this.nextPlayer(seat)\r\n       let suit = Current.length === 0 ? 'SHDC' : Current[0][0]\r\n       this.rule(nextPlayer,suit)\r\n       if(Record.length===52){\r\n        \r\n      \r\n        const result = document.querySelector('.result');\r\n        if (!result)\r\n         ReactDOM.render(<ResultPanel />, document.querySelector('#result'))\r\n       }\r\n    }\r\n    nextPlayer = (seat) =>{\r\n        let next = \"\"\r\n        if(Current.length !==4)  next = Player[(Player.indexOf(seat) + 1 )% 4] ;\r\n        return next\r\n    }\r\n    rule = (next,suit)=>{\r\n        if(\"SN\".indexOf(next) !== -1){\r\n            let cards = tableStore.selectCards(next, suit, [ACT1.L]);\r\n            if (cards.length == 0) {\r\n            cards = tableStore.selectCards(next, 'SHDC', [ACT1.L]);\r\n            tableStore.setCardsState(cards, { active: ACT1.LC, onclick: tableStore.play });\r\n\r\n            } else {\r\n            tableStore.setCardsState(cards, { active: ACT1.LC, onclick: tableStore.play });\r\n            var reg = new RegExp(suit, \"g\");\r\n            var a = 'SHDC'.replace(reg, \"\");\r\n            cards = tableStore.selectCards(next, a, [ACT1.L]);\r\n            tableStore.setCardsState(cards, { active: ACT1.D, onclick: tableStore.play });\r\n            }\r\n        }else{\r\n           let delay = 10;\r\n            if(Current.length===0) delay = 1500\r\n            setTimeout(()=>{\r\n                tableStore.dplay(next, Cards[next][0]);\r\n            },delay)\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport default new GameProcess\r\n","import Card from '../components/Card'  // 也应该从模型引入\r\nimport { ACT0, ACT1, ACT2, ACT3 } from '../components/Card'\r\n\r\nimport { flexLayout } from '../libs/layout.js'\r\nimport { observable, computed, action, toJS } from 'mobx';\r\nimport Position from '../common/Position';\r\nimport GameProcess from '../models/controler'\r\n\r\n\r\n/**\r\n * TableModel 游戏桌 数据Model\r\n * \r\n * 这个类主要用于 数据的计算，用来构造新的 state\r\n * 这里不含有任何 React 的组件。\r\n * Table.js 也就是 Table 控制器（容器）类调用本类\r\n * \r\n * 输入：\r\n * 输出：HEAD\r\n * \r\n * \r\n * 其他参考：\r\n *    innerWidth，innerHeight\r\n *    获取窗口的高度与宽度(不包含工具条与滚动条):\r\n */\r\n//* active define 0,1,2,3  0 灰色不能点，1 亮色不能点，2 亮色能点, 3 亮色能点突出\r\n// const ACT0 = 0;                             // initCards\r\n// const ACT1 = { D: 1, L: 2, LC: 3, LCO: 4 }  // dealCards\r\n// const ACT2 = 5;                             // play() in board\r\n// const ACT3 = 6;                             // out of Screen\r\n\r\nclass TableModel {\r\n  _tableId = null;\r\n  width = window.innerWidth;\r\n  height = window.innerHeight;\r\n  board = [[]]; // 出牌区域的四张牌\r\n  seat = {}\r\n  zindex = 10;\r\n  myseat = 'S'               // 用户坐在南 逻辑方位\r\n  //deals = 'XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX XXX.XX.XXXX.XXXX';\r\n  deals = 'XXXX.XX.XXX.XXXX XXX.XX.XXXX.XXXX AKQ.8762.876.876 XXX.XX.XXXX.XXXX';\r\n  //@observable uiState = {} // 未启用。\r\n  @observable bidState = {showBid:false,showBlock:false};\r\n  @observable state = {\r\n    cards: null, // 考虑这里不用 cards 只用必要的数字\r\n    scene: 0,     // 0 准备阶段 1 叫牌阶段 2 出牌阶段 3 claim 等待，4 claim 确认\r\n    calldata: { first: 'W', call: [], note: null }, // todo 补充 calldata 4列（东西南北）若干行的数组参考 call 方法\r\n    user: {},\r\n    claimAble:false,//当前是否可以摊牌\r\n    lastTrick: false,  // 最后一墩牌是否显示\r\n    //playseat:null, // 倒计时解决\r\n    debug: false,\r\n    unPlayCardNumber: null,\r\n    claim: { seat: \"S\", msg: null },\r\n    contract: '', // 暂时没用\r\n    winEW: '',\r\n    winSN: '',\r\n    vulnerable:'EW',//局况\r\n    declarer:'S',//逻辑方位 庄家\r\n  }\r\n  dummySeat = \"N\"; // 固定界面方位，非逻辑方位\r\n  dealer ='S';  //固定方位\r\n  logicDealer='';//逻辑方位\r\n  sequence = ''; //表示当前是第几副牌\r\n  hcp = 20;   // 高花点数\r\n  @observable InfoDrawer = false;\r\n  @observable curCall = '';  // 当前叫品，用于bidpanel 显示。\r\n \r\n  @observable _result = \"\";\r\n  @observable history = false;//是否显示历史记录\r\n  @observable record = [{\r\n    auction:[],\r\n    cards:[],\r\n    tricks:[],\r\n   \r\n  }]; //打过牌的记录\r\n  @observable record_result = []; \r\n  constructor() {\r\n    this.state.user = {\r\n      E: { ready: 1, name: '赌侠', face: '/imgs/face1.png', rank: '大师', seat: 'E' },\r\n      S: { ready: 0, name: '赌神', face: '/imgs/face2.png', rank: '专家', seat: 'S' },\r\n      W: { ready: 1, name: '赌圣', face: '/imgs/face1.png', rank: '王者', seat: 'W' },\r\n      N: { ready: 1, name: '赌王', face: '/imgs/face2.png', rank: '钻石', seat: 'N' }\r\n    };\r\n    \r\n    const seat = Position.SNames.split('');\r\n    seat.forEach(key => this.seat[key] = [{ x: 0, y: 0 }, { x: 0, y: 0 }]);\r\n    //this.initCards(this.deals);\r\n    window.___tableStore = this;\r\n    window.toJS = toJS;\r\n  }\r\n  set tableId(data) {\r\n    this._tableId = data;\r\n   \r\n    // 设置 board.js  的 tableId;\r\n  }\r\n  get tableId() {\r\n    return this._tableId;\r\n  }\r\n\r\n  get result() {\r\n    if (this._result) return this._result;\r\n    else return \"N3D +2 NS 600\";\r\n  }\r\n  // 横屏取高度，竖屏取宽度\r\n  @computed get size() {\r\n    return this.height > this.width ? this.width : this.height;\r\n  }\r\n  @computed get csize() {\r\n    /*  短路语法 牌的大小 可以计算在下面的函数内。\r\n        可以考虑用 vh 改造，所有计算都按照比例计算。\r\n        横屏取 高度，竖屏取宽度。（正方形桌面的边长）\r\n    */\r\n    return this._csize || (() => {\r\n      return this.size * 0.18;\r\n    })()\r\n  }\r\n  /**\r\n   * 初始化 state \r\n   * 每局开始的时候调用。给state 赋初值。\r\n   */\r\n  initState(){\r\n    this.board=[[],[]];\r\n    // this.state.cards = [];\r\n    this.state.scene = 0;\r\n    this.state.calldata = { first: '', call: [], note: null };\r\n    this.state.claim = { seat: '', msg: null };\r\n    this.state.contract = '';\r\n    this.state.winEW = '';\r\n    this.state.winSN = '';\r\n    this.state.vulnerable = '';\r\n    this.dummySeat = '';\r\n    this.curCall = '';\r\n  }\r\n\r\n  /**\r\n   * 从 this.deals 字符串转换成 ui用的 cards 数组\r\n   * \r\n   * 为渲染输出做准备，返回到 this.cards\r\n   * deals：[XXXXXXXXXXXXX,QJ98.A5.J853.QT4,XXXXXXXXXXXXX,XXXXXXXXXXXXX]\r\n   * 备注：\r\n   * Card.suits.slice(0);  返回新数组。 因为要对花色进行交换。\r\n   * this._swDC() 为了岔开颜色显示。交换 方片和梅花的牌。\r\n   */\r\n  @action\r\n  initCards(sdeals,reset=true) {\r\n    let suits = Card.suits.slice(0);            //['S', 'H', 'D', 'C'];\r\n    //this._swDC(suits);\r\n    const deals = sdeals.split(' ');\r\n    console.log(deals)\r\n    let index = 0;                              // 复位index 可以让四个人的牌同时发出来\r\n    const cards = [[], [], [], []];             // 初始化二维数组 保存四个方位的牌\r\n    deals.forEach((item, index1) => {           // index1 是方位编号\r\n      const suit = item.split('.')\r\n      //this._swDC(suit);\r\n      suit.forEach((s, index2) => {           // index2 四个花色  s 'QJ98' 牌点字串\r\n        for (var i = 0; i < s.length; i++) {\r\n          cards[index1].push({\r\n            onclick: () => false,             // onclick 必须是个函数\r\n            active: ACT0,\r\n            index: index,\r\n            key: index,\r\n            seat: Position.SNames[index1],  // 这张牌是那个方位的 动画位置需要\r\n            //table: this,\r\n            size: this.csize,                // 牌的大小\r\n            card: suits[index2] + s[i],       //s[i]  5D\r\n            position: { x: this.height / 2, y: this.height * 2 },     // 考虑一个默认位置。\r\n            // animation:{top:this.height * 2,left:this.height / 2,delay:0,duration:0}\r\n            animation:reset? {top:this.height * 2,left:this.height / 2,delay:0,duration:0}:{}\r\n          });\r\n          // if(reset)cards[index1][i]['animation'] = {\r\n          //   top:this.height * 2,left:this.height / 2,delay:0,duration:0}\r\n          index++;\r\n        }\r\n      });\r\n    });\r\n    this.state.cards = cards;\r\n  }\r\n  @action.bound\r\n  toggleBid(showBlock=true) {\r\n    this.hideLastTrick();\r\n    //this.showBid = !this.showBid;\r\n    this.bidState.showBid = !this.bidState.showBid;\r\n    this.bidState.showBlock = showBlock;\r\n  }\r\n  @action.bound\r\n  toggleInfo(){\r\n    this.InfoDrawer = !this.InfoDrawer;\r\n  }\r\n/**\r\n   * 发牌\r\n   * \r\n   * 算法注解：\r\n   *  1） 东西方向牌是横向的，因此要确定旋转的圆心。旋转后保证左上角坐标就是牌\r\n   *      的左上角如果按照中心旋转则还需要计算偏移量。利用 transformOrigin\r\n   *  2） 出牌的位置 东西南北 四个位置之前计算好的。\r\n   *  3） xy+5 目的是避免靠近牌桌边缘。\r\n   *  4） delay 是每张牌发出来的延迟时间。按照牌编号进行计算。出牌时应清零\r\n   *  5） '02'.indexOf(index) 东西的牌 rotate 旋转90度\r\n   *  6） .onclick=this.onclick(item2) onclick 函数引用\r\n   *      this.onclick(item2) 仍然返回一个函数 用来处理点击事件，传入item2\r\n   *  7)  if(item1.active !== 0) return; 只有active ==0 的牌被发出来。\r\n   * sepY 纵向扑克间隔\r\n   * sepX 横向扑克间隔\r\n   * \r\n   * active define 0,1,2,3  0 灰色不能点，1 亮色不能点，2 亮色能点, 3 亮色能点突出\r\n   * ACT000  ACT100 ACT110 ACT111 (考虑编码)\r\n   * \r\n   * \r\n   * \r\n   * 输入参数：play 是出牌的 事件处理方法。传递进来用于绑定到牌上\r\n   * 输出：this.state.cards\r\n   */\r\n  @action.bound\r\n  dealCards() {\r\n    //this.deals = 'XXX.XX.XXXX.XXXX XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX';\r\n    // this.deals = 'K34.J3.Q742.K832 XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX'\r\n    // this.initCards(this.deals);\r\n    const cards = this.state.cards;\r\n    // const sepY = this.csize * 0.15;\r\n    // const sepX = this.csize * 0.25;\r\n    const size = this.height > this.width ? this.width : this.height;\r\n    const offset = this.csize * 0.7 / 2\r\n    cards.forEach((item, index) => {\r\n      let rotate = 0;\r\n      let seat = Position.SNames[index]\r\n      let [x, y] = [this.seat[seat][0].x, this.seat[seat][0].y]\r\n      if ('EW'.indexOf(seat) !== -1) rotate = -90;\r\n      x = x + size / 16 / 5;\r\n      y = y + size / 16 / 5; // margin\r\n      item.forEach((item1, index1) => {\r\n        if (item1.active !== 0) return;\r\n        cards[index][index1].animation = {\r\n          top: y,\r\n          left: x,\r\n          delay: (item1.key % 13) * 80,\r\n          duration: 300,\r\n          rotate: rotate,\r\n          transformOrigin: `${offset}px ${offset}px`\r\n        }\r\n        cards[index][index1].active = ACT1.L; // 测试用\r\n      });\r\n      item = this.resetCards(item, seat)\r\n    })\r\n    this.state.cards = cards;\r\n    return cards;\r\n  }\r\n\r\n  @action.bound\r\n  play(index) {\r\n    const _play = function () {\r\n      const card = this.getCardByIndex(index);\r\n      if (card.active === ACT1.LC) {\r\n        this._preplay(card);\r\n      } else if (card.active === ACT1.LCO) {\r\n        this._play(card);\r\n        //Sound.play('play');\r\n        //if (this.board[0].length == 4) setTimeout(this.clearBoard, 1000)\r\n      } else return;\r\n    }\r\n    return _play.bind(this);\r\n  }\r\n  /**\r\n   * 扣着的牌 play\r\n   * @param {*} seat  \"NESW\"\r\n   * @param {*} card  \"C2\"\r\n   */\r\n  @action.bound\r\n  dplay(seat, card) {\r\n    //seat === this.dummySeat \r\n    const cards = this.state.cards;\r\n    let ucard = null;//null 修改成{}\r\n\r\n    if (seat === this.dummySeat){\r\n      for (let c of cards[Position.SNames.indexOf(seat)]){\r\n        if(c.card === card) {\r\n          ucard = c;\r\n          this._play(ucard);\r\n          break;\r\n        }\r\n      }\r\n    }else{\r\n      // 非明手摊牌时 也是明手\r\n      for (let c of cards[Position.SNames.indexOf(seat)]) {\r\n        if (c.card === card) {\r\n          ucard = c;\r\n          this._play(ucard);\r\n          return;\r\n        }\r\n      }\r\n      for (let c of cards[Position.SNames.indexOf(seat)]) {\r\n        if (c.active === ACT1.L) {\r\n          ucard = c;\r\n          ucard.card = card;\r\n          this._play(ucard);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * 点击一张牌 突出显示\r\n   * 被点击的牌突出显示，其他牌都恢复原样\r\n   * \r\n   * 输入输出都是基于 this.state.cards\r\n   * 输入：点击牌的引用（注意是引用）\r\n   * 输出：点击的牌的 top,left 调整\r\n   *      所有其他牌的 top,left 调整\r\n   */\r\n  @action.bound\r\n  _preplay(item) {\r\n    this.state.cards.forEach((item) => item.forEach((item) => {\r\n      if (item.active === ACT1.LCO) { // active=4 突出的牌 active=3 回复原样\r\n        item.active = ACT1.LC;\r\n        switch (item.seat) {\r\n          case 'E': item['animation']['left'] += 20; break;\r\n          case 'S': item['animation']['top'] += 20; break;\r\n          case 'W': item['animation']['left'] -= 20; break;\r\n          case 'N': item['animation']['top'] -= 20; break;\r\n          default: break;\r\n        }\r\n\r\n      }\r\n    }))\r\n\r\n    item.active = ACT1.LCO;\r\n    switch (item.seat) {\r\n      case 'E': item['animation']['left'] -= 20; break;\r\n      case 'S': item['animation']['top'] -= 20; break;\r\n      case 'W': item['animation']['left'] += 20; break;\r\n      case 'N': item['animation']['top'] += 20; break;\r\n      default: break;\r\n    }\r\n    item['animation']['delay'] = 0;\r\n  }\r\n  \r\n\r\n  /** \r\n   * 出牌 打出去\r\n   * 首先要进行 preplay 然后才能 play\r\n   * \r\n   * 输入：item 当前点击的牌的引用\r\n   * 输出：item 位置调整，this.board 出牌区域的牌 调整。\r\n   * \r\n   * if(window.event != undefined) Out.play(item);\r\n   * 只有 点击打出去的牌 才会执行 Out.play();\r\n   */\r\n  @action.bound\r\n  _play = (item) => {\r\n      \r\n    if (this.board[0].length === 4) {setTimeout(this._play.bind(this,item),1100);return;};\r\n   \r\n    this._setCardACT2(item,true)\r\n\r\n    this.resetTable(); // 牌恢复为不可点击状态 ACT1.L\r\n\r\n    const seatIndex = Position.SNames.indexOf(item.seat);\r\n    //const seatIndex = Position.SNames.indexOf(item.seat);\r\n    let cards = this.state.cards[seatIndex];\r\n    cards = this.resetCards(cards, item.seat, true);\r\n    // if (window.event != undefined)\r\n   \r\n    { GameProcess.play(item) };\r\n  }\r\n\r\n  /**\r\n   * userCards 0-3  NESW\r\n   * @param {*} userCards \r\n   * @param {*} board  0 当前墩，1上一墩\r\n   */\r\n  \r\n  /**\r\n   * 准备阶段断线重连\r\n   * 该谁 叫牌，该谁打牌？\r\n   */\r\n  @action.bound\r\n  restore(data) {\r\n    this['restore' + data.scene](data);\r\n  }\r\n\r\n  @action.bound\r\n  restore0(data) {\r\n    this.state.scene = data.scene;\r\n    this.state.user = data.user;\r\n  }\r\n  @action.bound\r\n  restore1(data) {\r\n    this.restore0(data); this.state.cards = [];\r\n    this.initCards(data.deals);\r\n    this.dealCards();\r\n    this.curCall = data.curCall;\r\n    this.state.contract = data.contract;\r\n    this.state.calldata = data.calldata;\r\n\r\n  }\r\n  @action.bound\r\n  restore2(data) {  //  注意这里需要先发牌才能恢复。\r\n    this.restore1(data);\r\n    this.dummySeat = data.dummySeat;\r\n    this.state.winEW = data.winEW;\r\n    this.state.winSN = data.winSN;\r\n    // this.initCards(data.deals);\r\n    // this.dealCards();\r\n    this.restore_2(data.userCards, data.board);\r\n  }\r\n  @action.bound\r\n  restore3(data) {\r\n    this.restore2(data);\r\n    this.state.claim = data.claim;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * \r\n   * 输入参数：\r\n   * @param {*} userCards  0-1 NESW\r\n   * 用户手里的牌\r\n   * @param {*} board [0] 当前墩，[1] 上一墩\r\n   * 参考: debug.js o.restore\r\n   * \r\n   * 输出：\r\n   * this.state.cards   调整牌数组。调整 active 的值等。\r\n   * this.board         调整board 赋值当前墩和上一墩。\r\n   * \r\n   */\r\n  restore_2(userCards, board1) {\r\n    const openSeat = 'S' + this.dummySeat;\r\n    const cards = this.state.cards; // 这里应该从原始牌初始化。因为 state.cards 状态不确定\r\n    this.board = [[], []];\r\n    let cardNum = 0;\r\n    // 1） 飞走不在手里的牌。\r\n    userCards.forEach((uCards, uindex) => {\r\n      // 明牌\r\n      if (openSeat.indexOf(Position.SNames[uindex]) !== -1) {\r\n        cards[uindex].forEach((card) => {\r\n          // 不在手里的牌 全部 飞走\r\n          window.___card = card;\r\n          // window.___uindex = uindex;\r\n          if (uCards.indexOf(card.card) === -1) this._setCardACT3(card)\r\n        });\r\n      // 暗牌\r\n      } else {\r\n        cardNum = 13 - uCards.length;\r\n        for (let i = 0; i < cardNum; i++) {\r\n          // 不在手里的牌飞走 因为是暗牌因此从0开始飞走\r\n          this._setCardACT3(cards[uindex][i]);\r\n        }\r\n      }\r\n    });\r\n\r\n    // 2) 设置当前墩和上一墩\r\n    board1[0].forEach((ucard) => {\r\n      const seatIndex = Position.SNames.indexOf(ucard.seat);\r\n      // 暗牌处理\r\n      if (openSeat.indexOf(ucard.seat) === -1) {\r\n        cards[seatIndex][0].card = ucard.card;\r\n        this._setCardACT2(cards[seatIndex][0]);\r\n        //this.board[0].push(cards[seatIndex][0]);\r\n        // 明牌处理\r\n      } else {  // 赋值了多次。\r\n        for (let card of cards[seatIndex]) {\r\n          \r\n          if (card.card.slice(-1) === 'X') {\r\n            card.card = ucard.card;\r\n            this._setCardACT2(card);\r\n            break;\r\n          }\r\n          //this.board[0].push(card);\r\n        };\r\n      }\r\n    }, this);\r\n    // 2）上一墩\r\n    board1[1].forEach((ucard,index) => {\r\n      const seatIndex = Position.SNames.indexOf(ucard.seat);\r\n      const pre = cards[seatIndex][1].active == ACT3 ? 1 : 0;\r\n      // 暗牌处理\r\n      if (openSeat.indexOf(ucard.seat) === -1) {\r\n        cards[seatIndex][pre].card = ucard.card;\r\n        //this._setCardACT3(cards[seatIndex][1]);\r\n        this.board[1].push(cards[seatIndex][pre]);\r\n        // 明牌处理\r\n      } else {\r\n        for (let card of cards[seatIndex]) {\r\n          if (card.card.slice(-1) === 'X') {\r\n            card.index = 50 + index;\r\n            card.card = ucard.card;\r\n            this._setCardACT3(card);\r\n            this.board[1].push(card);\r\n            break;\r\n          }\r\n\r\n        };\r\n      }\r\n    }, this);\r\n\r\n    Position.SNames.split('').forEach((seat, index) => {\r\n      this.resetCards(this.state.cards[index], seat);\r\n    })\r\n  }\r\n\r\n  \r\n  /**\r\n   * 设置一张牌为 已经飞走了。\r\n   * @param {} card \r\n   */\r\n  _setCardACT3(card) {\r\n    card['animation']['left'] = this.size / 2;\r\n    card['position']['x'] = this.size / 2;\r\n    card['animation']['top'] = -this.size * 2;\r\n    card['position']['y'] = -this.size * 2;\r\n    card['animation']['delay'] = 0;\r\n    card.active = ACT3;\r\n  }\r\n\r\n  /**\r\n   * 把牌设置为 打在桌面上。\r\n   * @param {*} card \r\n   * @param {boolean} isAnim true 有动画普通打牌 false 无动画断线重连\r\n   * \r\n   */\r\n  _setCardACT2(card, isAnim = false) {\r\n    card.active = ACT2;    // 已经打出去的牌\r\n    card['animation']['left'] = this.seat[card.seat][1].x;\r\n    card['animation']['top'] = this.seat[card.seat][1].y;\r\n    card['animation']['delay'] = 0;\r\n    card['zIndex'] = this.zindex++;\r\n    this.board[0].push(card);\r\n\r\n    if (isAnim) {\r\n      if (this.board[0].length === 4) setTimeout(this.clearBoard, 1000);\r\n    } else {\r\n      card['position']['x'] = this.seat[card.seat][1].x;\r\n      card['position']['y'] = this.seat[card.seat][1].y;\r\n      if (this.board[0].length === 4) this.clearBoard();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清理桌面上的牌\r\n   * 定位参考：\r\n   *  -this.size * 0.2;  计分位置\r\n   * \r\n   * board[i].active = ACT3;  飞到桌面以外。                      \r\n   * board.unshift([]); 四张牌飞走后，当前墩为空。\r\n   */\r\n  //model\r\n  @action.bound\r\n  clearBoard() {\r\n    //if(this.board.length < 4) return false;\r\n    const board = this.board;\r\n    for (let i = 0; i < board[0].length; i++) {\r\n      board[0][i].animation.left = this.size / 2;\r\n      board[0][i].animation.top = -this.size * 2;\r\n      board[0][i].active = ACT3;\r\n    };\r\n    board.unshift([]);\r\n    this.state.cards = Object.assign([], this.state.cards);\r\n  }\r\n\r\n  /**\r\n   * 所有牌回复到 亮色，不可点击。\r\n   * 也就是出牌后的状态。\r\n   */\r\n  @action.bound\r\n  resetTable() {\r\n    const cards = this.selectCardsByAct([ACT1.D, ACT1.LC]);\r\n    window.___cards1 = cards;\r\n    this.setCardsState(cards, { active: ACT1.L });\r\n  }\r\n\r\n\r\n  /**\r\n   * 通过  actlist 选中特定的牌。\r\n   * 比如选中：[ACT0,ACT1] 的所有牌。\r\n   */\r\n  selectCardsByAct(actlist) {\r\n    const cards = this.state.cards;\r\n    let destCards = [];\r\n    cards.forEach((ucards) => {\r\n      ucards.forEach((card) => {\r\n        if (actlist.indexOf(card.active) !== -1) destCards.push(card);\r\n      });\r\n    });\r\n    return destCards;\r\n  }\r\n\r\n  /**\r\n   * 根据用户和花色选出指定的牌对象数组\r\n   * @param {*} user 用户 NESW\r\n   * @param {*} suit 花色\r\n   * \r\n   * active = [ACT1.L,ACT1.D];\r\n   */\r\n  selectCards(userSeats, suit, active = \"0123456\") {\r\n    const cards = this.state.cards;\r\n    const seats = userSeats.split('');\r\n    let destCards = [];\r\n    seats.forEach((seat) => {\r\n      const seatIndex = new Position(seat).in;\r\n      cards[seatIndex].forEach((card, i) => {\r\n        if (suit.indexOf(card.card.slice(0, 1)) !== -1 &&\r\n          active.indexOf(card.active) != -1) destCards.push(card);\r\n      });\r\n    });\r\n    return destCards;\r\n  }\r\n  /**\r\n   * 通过 index n/52 获得card 的引用。\r\n   * cardIndexOf 重复函数\r\n   * @param {*} index \r\n   */\r\n  getCardByIndex(index) {\r\n    const cards = this.state.cards;\r\n    const user = Math.floor(index / 13);\r\n    const i = index % 13;\r\n    return cards[user][i];\r\n  }\r\n\r\n  /**\r\n   * 未完成。\r\n   * @param {*} cards\r\n   *    一维数组，值是card对象。\r\n   * @param {*} active \r\n   * @param {*} handleClick \r\n   */\r\n  addClick2Cards(cards, active, handleClick) {\r\n    cards.forEach((item, index) => {\r\n      cards[index].active = active;\r\n      if (handleClick)\r\n        cards[index].onclick = handleClick;\r\n    });\r\n  }\r\n  /**\r\n   * 好像可以覆盖上面的功能。\r\n   */\r\n  setCardsState(cards, state) {\r\n    cards.forEach((card, i) => {\r\n      console.log('card555:', card);\r\n      Object.keys(state).forEach((key) => {\r\n        //if(key=='onclick') card[key] = ()=>state[key](card);\r\n        card[key] = state[key];\r\n      });\r\n      //cards[i] = Object.assign({}, card, state);\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n  * initSeat 初始化 发牌位置 出牌位置的坐标。 \r\n  * center   桌子的中心\r\n  *          以body 为父元素计算。\r\n  * offset   是四张牌叠放需要错开的空间。（长 - 宽）/ 2\r\n  * this.seat[key][0] 四个座位发牌坐标xy\r\n  * this.seat[key][1] 四个作为出牌坐标xy\r\n  * \r\n  *          出牌坐标计算依据：1）扑克牌的中心点和左上角位置差固定。\r\n  *          因此可以以中心点考虑四个方位的位移 再加减相同的 位置差即可。\r\n  *          注：0.7 是扑克的横竖比例。\r\n  * \r\n  * 采用 .css 确定尺寸后 被注释的语句 不起作用了。修改为 clientHeight\r\n  *        this.ref.board.current.clientHeight / 2\r\n  *        // parseInt(this.ref.board.current.style.height.slice(0, -2)) / 2\r\n  * \r\n  * 输入：center, seat\r\n  * 输出：this.seat\r\n  * \r\n  */\r\n  initSeat(center, seats) {\r\n    this.center = center;\r\n    const offset = this.csize * 0.7 / 2\r\n    for (let key in this.seat) {\r\n      this.seat[key][0]['y'] = seats[key]['y'];\r\n      this.seat[key][0]['x'] = seats[key]['x'];\r\n\r\n      if (key === 'E') {\r\n        this.seat[key][0]['y'] = this.seat[key][0]['y'] + this.size * 0.06\r\n        // 下面是处理　牌的叠放顺序　联合参考：dealCards\r\n        //this.seat[key][0]['y'] = this.seat[key][0]['y'] + this.size * 0.4\r\n        this.seat[key][1]['y'] = center.y - offset\r\n        this.seat[key][1]['x'] = center.x - offset * 0.8\r\n      } else if (key === 'S') {\r\n        this.seat[key][0]['x'] = this.seat[key][0]['x'] //+ this.size * 0.21\r\n        //this.seat[key][1]['y'] = center.y + offset - this.csize / 2;\r\n        this.seat[key][1]['y'] = center.y - offset * 0.8\r\n        this.seat[key][1]['x'] = center.x - offset\r\n      } else if (key === 'W') {\r\n        this.seat[key][0]['y'] = this.seat[key][0]['y'] + this.size * 0.06\r\n        this.seat[key][1]['y'] = center.y - offset\r\n        this.seat[key][1]['x'] = center.x + offset * 0.8 - this.csize;\r\n      } else if (key === 'N') {\r\n        this.seat[key][0]['x'] = this.seat[key][0]['x'] //+ this.size * 0.21\r\n        this.seat[key][1]['y'] = center.y + offset * 0.8 - this.csize;\r\n        this.seat[key][1]['x'] = center.x - offset\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * 重新整理手里的牌\r\n   * \r\n   * 输入：\r\n   *    cards       一手牌\r\n   *    seatIndex   当前牌的方位号\r\n   * \r\n   * 输出：\r\n   *    cards       定位重新排列的一手牌\r\n   * pos：left 上下 top 左右\r\n   * flexLayout： 获得重新的布局分布 参数 2 每间隔2张牌 增大一些距离\r\n   * Array.shift() 从开头弹出一个值\r\n   */\r\n  @action.bound\r\n  resetCards(cards, seat, resetDelay = false) {\r\n    const pos = \"EW\".indexOf(seat) == -1 ? 'left' : 'top';\r\n    let length = 0;\r\n    let ps = 0;\r\n    cards.forEach(card => {\r\n      if (card.active === ACT1.L || card.active === ACT1.LC)\r\n        length++\r\n    })\r\n    const layout = flexLayout(this.size, length, 2)\r\n    return cards.map((card, index) => {\r\n      if (card.active === ACT1.L || card.active === ACT1.LC) {\r\n        ps = layout.shift();\r\n        card['animation'][pos] = ps;\r\n        card['animation']['duration'] = 600;\r\n        if (resetDelay) card['animation']['delay'] = ps;\r\n        //if (resetDelay) card['animation']['delay'] = 0;\r\n      }\r\n      return card;\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 按照花色布局 已可用，未启用\r\n   * \r\n   * @param {*} cards 牌数组\r\n   * @param {*} seatIndex 座位编号\r\n   */\r\n  suitLayoutCards(cards, seatIndex) {\r\n    //const rotate = [0, 2].indexOf(seatIndex) == -1 ? '0' : '-90';\r\n    const rotate = 0;\r\n    let preCard = cards[0];\r\n    let offsetTop = 0;\r\n    let offsetLeft = 0;\r\n    //let seat = Position.SNames[seatIndex];\r\n    cards.map((card, index) => {\r\n      if (card.card.slice(1, 2) != preCard.card.slice(1, 2)) {\r\n        offsetTop += 40;\r\n        offsetLeft = 0;\r\n        card.animation['top'] += offsetTop;\r\n        //card.animation['left'] += this.seat[seat][0].x\r\n      } else {\r\n        card.animation['left'] += offsetLeft;\r\n        card.animation['top'] += offsetTop;\r\n        offsetLeft += 25;\r\n      }\r\n      card.animation['rotate'] = rotate;\r\n      preCard = card;\r\n    })\r\n  }\r\n\r\n\r\n  \r\n  @action.bound\r\n  claim(seat, claimMsg) {\r\n    //this._claim.seat = this.myseat;\r\n    // this.state.claim.seat = seat;\r\n    this.state.claim.msg = claimMsg;\r\n    this.state.scene = this.state.scene==3 ? 2 :3;\r\n  }\r\n  \r\n\r\n  @action.bound\r\n  getUnPlayCardNumber() {\r\n   \r\n    const cards = this.selectCards('S', 'SHDC', [ACT1.D, ACT1.L, ACT1.LC, ACT1.LCO])\r\n    const number = cards.length;\r\n    this.state.unPlayCardNumber = number;\r\n    return number;\r\n  }\r\n\r\n  cardIndexOf(index) {\r\n    const i1 = Math.floor(index / 13);  // 商数是座位 0-3\r\n    const i2 = index % 13;              // 余数是 第几张牌\r\n    return this.state.cards[i1][i2];\r\n  }\r\n  @action.bound\r\n  toggleLastTrick() {\r\n    this.showBid = false;\r\n    this._setShowLastTrick(!this.state.lastTrick);\r\n  }\r\n  @action.bound\r\n  showLastTrick() {\r\n    this._setShowLastTrick(true);\r\n  }\r\n  @action.bound\r\n  hideLastTrick() {\r\n    this._setShowLastTrick(false);\r\n  }\r\n  /**\r\n   * \r\n   * @param {*} isShow \r\n   * 注意 隐藏上一墩的时候。可能this.board[1] 已经更新。因此要遍历隐藏所有下标>1\r\n   */\r\n  @action\r\n  _setShowLastTrick(isShow) {\r\n    // 在模型里 应该先判断当前 trick 编号。然后决定是否能看lasttrick\r\n    const lt = this.board[1];\r\n    window.___board1 = toJS(this.board);\r\n    let card = null;\r\n    if (lt && isShow){\r\n      this._showLastTrick(lt);\r\n      let time1 = setTimeout(()=>{\r\n        this._setShowLastTrick(false);\r\n        clearTimeout(time1)\r\n      },3000)\r\n    }\r\n    if (lt && !isShow) for(let i=1;i<this.board.length;i++) \r\n      this._hideLastTrick(this.board[i]);\r\n    this.state.lastTrick = isShow;\r\n    return this.state.cards;\r\n  }\r\n  @action\r\n  _showLastTrick(cards){\r\n    cards.forEach((item, index) => { console.log(item)\r\n      item['animation']['left'] = this.seat[item.seat][1].x - this.size / 2.9\r\n      item['animation']['top'] = this.seat[item.seat][1].y - this.size / 2.9\r\n      item['animation']['zIndex'] = 1000\r\n      item.active = ACT3; // 测试用\r\n    })    \r\n  }\r\n  @action\r\n  _hideLastTrick(cards){\r\n    cards.forEach((item, index) => {\r\n      item['animation']['left'] = this.size / 2;\r\n      item['animation']['top'] = -this.size / 2;\r\n      item.active = ACT3; // 测试用\r\n    })    \r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param {*} seat   界面方位。业务方位需要进行转换。\r\n   * @param {*} dcards 明手的牌数组  ['SQ','SJ' ....\r\n   */\r\n  @action.bound\r\n  openDummy(seat, dcards) { \r\n    // await 获得数据 然后更新 state\r\n    if (!this.dummySeat) this.dummySeat = seat;\r\n    const dummySeat = seat;\r\n   \r\n    let cards = this.selectCards(dummySeat, 'SHDC',[ACT1.L]);\r\n    \r\n    dcards.forEach((card, index) => {\r\n      cards[index].card = card;\r\n    });\r\n\r\n  }\r\n  \r\n  setTricks(ew=false,sn=false,contract=false){\r\n    if(ew) this.state.winEW = ew;\r\n    if(sn) this.state.winSN = sn;\r\n    if(contract) this.state.contract = contract;\r\n  }\r\n\r\n\r\n  /**\r\n   * 把方片和梅花做一个交换。\r\n   * @param {*} cards 四个花色的牌构成的。\r\n   */\r\n  _swDC(arr) {\r\n    let sw = null;\r\n    sw = arr[2]; arr[2] = arr[3]; arr[3] = sw;\r\n    return arr;\r\n  }\r\n  // se 是方位 \"NESW\"\r\n  @action.bound\r\n  userReady(se) {\r\n    this.state.user[se]['ready'] = 1\r\n  }\r\n\r\n  @action.bound\r\n  userAllReady() {\r\n    const user = this.state.user;\r\n    let ready = true;\r\n    Object.values(user).forEach(el => {\r\n      if (el.ready == 0) ready = false\r\n    })\r\n    //if (ready) this.state.scene = 1;\r\n    return ready;\r\n  }\r\n  @action.bound\r\n  userLogin(seat, user) {\r\n    this.state.user[seat] = user;\r\n  }\r\n\r\n\r\n  call = (data) => {\r\n    this.state.calldata = data;\r\n  }\r\n\r\n  /**\r\n   * 恢复牌局\r\n   * 主要用于断线重连，或者和服务器数据不同步时执行。\r\n   * 依据 this.boardState 恢复。\r\n   */\r\n  @action.bound\r\n  recovery = () => {\r\n\r\n  }\r\n\r\n  reConnect = () => {\r\n   \r\n  }\r\n  nextGame = () => {\r\n   \r\n  }\r\n  @action.bound\r\n  showHistory = () => {\r\n    this.history = true;\r\n  }\r\n  @action.bound\r\n  hideHistory = () => {\r\n    this.history = false;\r\n  }\r\n}\r\n// Position.SNamesen = ['E', 'S', 'W', 'N'];\r\n//Position.SNames = ['E', 'S', 'W', 'N'];\r\n// Position.SNamescn = ['东', '南', '西', '北'];\r\n\r\n\r\n/**\r\n * 直接实例化，因为一局游戏只有一个桌子。\r\n * Table.js 也就是 Table 控制器（容器）类调用本类\r\n */\r\nexport { TableModel };\r\nexport default new TableModel();","import Card from '../components/Card';\r\n/**\r\n * arr = [1,2,3,4,5];\r\n * arr.RightMove(3)\r\n * console.log(arr);// [3,4,5,1,2]\r\n */\r\nArray.prototype.RightMove = function (num) {\r\n  num = num || 0;\r\n  for (let i = 0; i < num; i++) {\r\n    var item = this.pop();\r\n    this.unshift(item)\r\n  }\r\n}\r\n\r\nexport function rotateSeat(ArrSeats, player) {\r\n  switch (player) {\r\n    case \"E\":\r\n      ArrSeats.RightMove(1); break;\r\n    case \"S\":\r\n      ArrSeats.RightMove(0); break;\r\n    case \"W\":\r\n      ArrSeats.RightMove(3); break;\r\n    case \"N\":\r\n      ArrSeats.RightMove(2); break;\r\n  }\r\n}\r\n//接收牌 W N E S    桌面的上的牌 N E S W \r\nfunction _rotateCard(ArrSeats, player) {\r\n  switch (player) {\r\n    case \"E\":\r\n      ArrSeats.RightMove(0); break;\r\n    case \"S\":\r\n      ArrSeats.RightMove(3); break;\r\n    case \"W\":\r\n      ArrSeats.RightMove(2); break;\r\n    case \"N\":\r\n      ArrSeats.RightMove(1); break;\r\n  }\r\n  return ArrSeats;\r\n}\r\nexport function Etoeast(x) {\r\n  switch (x) {\r\n    case 'E': return 'east';\r\n    case 'S': return 'south';\r\n    case 'W': return 'west';\r\n    case 'N': return 'north';\r\n  }\r\n}\r\n\r\n// X(13) => 'XXXXXXXXXXXXX'\r\nfunction _X(num) {\r\n  var str = '';\r\n  for (let i = 0; i < num; i++) {\r\n    str += 'X'\r\n  }\r\n  return '...' + str;\r\n}\r\nconst _getOneSuit = (suit, hand) => {\r\n  const reg = new RegExp(suit, \"g\");\r\n  const h = hand.filter(card => card.substring(0, 1) === suit);\r\n  return h.toString().replace(reg, \"\").replace(/,/g, \"\");\r\n}\r\nconst _getOneHand = (hand) => {\r\n  return _getOneSuit(Card.suits[0], hand) + '.' + _getOneSuit(Card.suits[1], hand) + '.' + _getOneSuit(Card.suits[2], hand) + '.' + _getOneSuit(Card.suits[3], hand);\r\n}\r\n\r\n/**\r\n * 图片预加载\r\n */\r\nfunction cardImgs() {\r\n  const suit = \"SHDC\".split(\"\");\r\n  const rank = \"23456789TJQKA\".split(\"\");\r\n  return suit.map((s) => rank.map((r) => `cards/${s + r}.svg`));\r\n}\r\n// 更简单的预加载\r\nfunction _setPreLoad(img){\r\n  let images = window.document.createElement(\"img\")\r\n  images.src = img;\r\n  //alert('preload');\r\n}\r\n// h5 的预加载\r\nfunction _setPreLoad1(img){\r\n  let hint = window.document.createElement(\"link\")\r\n  hint.setAttribute(\"rel\", \"prefetch\");\r\n  hint.setAttribute(\"href\", img);\r\n  document.getElementsByTagName(\"head\")[0].appendChild(hint)\r\n}    \r\n\r\nfunction imgPreLoad(imgs) {\r\n  imgs.forEach((img) => {\r\n    if (typeof (img) == 'object') img.forEach((i) => _setPreLoad(i))\r\n    else _setPreLoad(img)\r\n  })\r\n  \r\n}\r\n//～ 图片预加载结束\r\n\r\n\r\n\r\n//修改牌的花色顺序\r\nexport function changeSuitsOrder(cards, newSuits) {\r\n  var newCards = [];\r\n  newSuits.forEach((suit) => {\r\n    for (let i = 0; i < cards.length; i++) {\r\n      if (cards[i].indexOf(suit) != -1)\r\n        newCards.push(cards[i]);\r\n    }\r\n  })\r\n  return newCards\r\n}\r\n/**  W N E S\r\n * \"[[\"S5\", \"S4\", \"S3\", \"S2\", \"H5\", \"H4\", \"H3\", \"D5\", \"D4\", \"D3\", \"C5\", \"C4\", \"C3\"], \r\n *   [\"S8\", \"S7\", \"S6\", \"HA\", \"HK\", \"HQ\", \"DA\", \"DK\", \"DQ\", \"CA\", \"CK\", \"CQ\", \"C2\"],\r\n *   [\"SJ\", \"ST\", \"S9\", \"HJ\", \"HT\", \"H9\", \"DJ\", \"DT\", \"D9\", \"D2\", \"CJ\", \"CT\", \"C9\"], \r\n *   [\"SA\", \"SK\", \"SQ\", \"H8\", \"H7\", \"H6\", \"H2\", \"D8\", \"D7\", \"D6\", \"C8\", \"C7\", \"C6\"]\r\n * ]\"\r\n * \r\n * N E S W\r\n * const deals = 'K34.J3.Q742.K832 XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX';\r\n */\r\nconst seatMap = {\r\n  \"E\": { N: 'E', E: 'S', S: 'W', W: 'N' },\r\n  \"S\": { E: 'E', S: 'S', W: 'W', N: 'N' },\r\n  \"W\": { S: 'E', W: 'S', N: 'W', E: 'N' },\r\n  \"N\": { W: 'E', N: 'S', E: 'W', S: 'N' }\r\n}\r\nconst arr1 = ['W', 'N', 'E', 'S'];\r\nconst arr2 = ['N', 'E', 'S', 'W'];\r\nexport function cardString(user, cardsArr) {\r\n  cardsArr = JSON.parse(cardsArr);\r\n  var ind = arr1.indexOf(user);\r\n  var myCards = cardsArr[ind];\r\n  var deals = _X(13) + ' ' + _X(13) + ' ' + _getOneHand(myCards) + ' ' + _X(13);\r\n  return deals;\r\n}\r\n\r\n\r\n//user 表示玩家的真实方位  \r\n// 得到自己和明手的牌 和 扣着的牌\r\nexport function getUserCards(user, dummy, cardsArr) {\r\n  let userCards = null;\r\n  cardsArr = JSON.parse(cardsArr);\r\n  userCards = _rotateCard(cardsArr, user);\r\n  var dummyInd = arr2.indexOf(seatMap[user][dummy])\r\n  userCards.forEach((item, ind) => {\r\n    if (ind === 2 || ind === dummyInd) {\r\n    } else {\r\n      item.fill('CX')\r\n    }\r\n  });\r\n  console.log(userCards)\r\n  return userCards;\r\n}\r\nexport function getUserCardsDeal(user, dummy, cardsArr) {\r\n  let result = [];\r\n  let userCardsDeal = null;\r\n  cardsArr = JSON.parse(cardsArr);\r\n  userCardsDeal = _rotateCard(cardsArr, user)\r\n\r\n  var dummyInd = arr2.indexOf(seatMap[user][dummy])\r\n  userCardsDeal.forEach((item, ind) => {\r\n    if (ind === 2 || ind === dummyInd) {\r\n      var num = 13 - item.length;\r\n      var XArr = new Array(num).fill('CX')\r\n      item = item.concat(XArr)\r\n      result.push(item)\r\n    } else {\r\n      item = new Array(13).fill('CX');\r\n      result.push(item)\r\n    }\r\n  });\r\n  console.log(userCardsDeal)\r\n  console.log(result);\r\n  var res = result.map((item1) => {\r\n    return _getOneHand(item1);\r\n  })\r\n\r\n  return res.join(' ');\r\n}\r\n\r\n//去除数组中的空值，返回一个新的数组\r\nexport function removeNull(array){\r\n  return array.filter((item)=>item);\r\n  \r\n}\r\n\r\n//一维数组转二维数组,返回一个新的二维数组\r\nexport function Two(array,col){\r\n  array = removeNull(array)\r\n  let row = Math.ceil(array.length / col);\r\n  var newArr = [];\r\n  for(let i = 0 ; i < row ;i++){\r\n    newArr.push(array.slice(i*col , (i+1)*col))\r\n  }\r\n  return newArr;\r\n}\r\n\r\nexport function fillCall(firstCall,myseat){\r\n    let dirArr = ['E','S','W','N'];\r\n    let ind = dirArr.indexOf(myseat)\r\n    for(let i = 0;i<(3-ind);i++){\r\n      dirArr.unshift(dirArr.pop())\r\n    }\r\n    if(firstCall){\r\n      return dirArr.indexOf(firstCall)\r\n    }else{\r\n      return 0\r\n    }\r\n    \r\n}\r\n/**\r\n * \r\n * @param {*} seats 每一个玩家对应的座位\r\n */\r\nexport function getCurOrLast(seats, trick) {\r\n  let result = []\r\n  trick.forEach((item, ind) => {\r\n    if (item !== null) {\r\n      var player = arr1[ind % 4]; //真实玩家\r\n      result.push({ seat: seats[player], card: item })\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nexport { imgPreLoad, cardImgs };","class Sound{\n    static play(file){\n        const sound = document.querySelector('#sound')\n        sound.innerHTML = '<audio controls=\"controls\" id=\"audio_player\" style=\"display:none;\"> <source src=\"' + file + '\" > </audio><embed id=\"MPlayer_Alert\" src=\"/sounds/'+file+'.mp3\" loop=\"false\" width=\"0px\" height=\"0px\" /></embed>';\n    }\n}\n\nexport default Sound","import React, { Component } from 'react';\n//import TweenOne from 'rc-tween-one';\nimport './Clock.css';\n\n\n/**\n * props.time 指定倒计时时间。\n * props.callback 执行倒计时结束的回调函数。\n * \n * 组件大小和位置，由父组件确定。\n */\nclass Clock extends Component {\n    state = {\n        time: 0\n    }\n    constructor(props) {\n        super(props);\n        this.color1 = '#eeee33';    // 表体颜色\n        this.color2 = '#73D0F4';    // 铃铛颜色\n        //this.state.time = props.time;\n    }\n    timing = () => {\n        if (this.state.time === this.props.time) {\n            this.props.callback();\n            clearInterval(this._clock);\n        } else {\n            this.setState({\n                time: ++this.state.time\n            })\n        }\n    }\n    componentDidMount() {\n        this._clock = setInterval(this.timing, 1000)\n    }\n    render() {\n        const style={\n            animation: {\n                animation:'twinkling 1s infinite ease-in-out',\n                animationFillMode:'both',\n                width:'100%'\n            },\n            animation2: {\n                animation:'twinkling 1s infinite ease-in-out',\n                animationFillMode:'both',\n                width:'100%'\n            }            \n        };\n        const time = this.state.time;\n        const clock = Clock.svg.replace('{time}', time)\n                                .replace(/{color1}/g,this.color1)\n                                .replace(/{color2}/g,this.color2);\n        return <div style={style.animation2} dangerouslySetInnerHTML={{ __html: `${clock}` }} />\n        //return <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: `${clock}` }} />\n\n    }\n}\n\nClock.svg = `\n<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 100 95\">\n <!-- Created with Method Draw - http://github.com/duopixel/Method-Draw/ -->\n\n <g>\n  <title>background</title>\n  <rect fill=\"none\" id=\"canvas_background\" height=\"97\" width=\"102\" y=\"-1\" x=\"-1\"/>\n  <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\n   <rect fill=\"url(#gridpattern)\" stroke-width=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\n  </g>\n </g>\n <g>\n  <title>Layer 1</title>\n  <g stroke=\"null\" id=\"svg_32\">\n   <g stroke=\"null\" transform=\"matrix(0.23071361434944695,0,0,0.23071361434944695,-27.358995633015137,-28.494021335889844) \" id=\"svg_5\">\n    <g stroke=\"null\" id=\"svg_6\">\n     <path stroke=\"null\" id=\"svg_7\" fill=\"none\" d=\"m335.303058,180.7814c-86.434,0 -156.754,70.318 -156.754,156.752s70.32,156.752 156.754,156.752s156.752,-70.318 156.752,-156.752s-70.318,-156.752 -156.752,-156.752zm0,300.674c-79.359,0 -143.923,-64.563 -143.923,-143.922s64.564,-143.922 143.923,-143.922s143.922,64.563 143.922,143.922s-64.562,143.922 -143.922,143.922z\"/>\n     <path stroke=\"null\" id=\"svg_8\" fill=\"none\" d=\"m335.303058,217.6114c-66.126,0 -119.923,53.797 -119.923,119.922s53.797,119.922 119.923,119.922c66.125,0 119.922,-53.797 119.922,-119.922s-53.797,-119.922 -119.922,-119.922zm75.232,154.996c-1.232,0 -2.486,-0.191 -3.723,-0.594l-44.67,-14.566c-6.1,8.199 -15.859,13.523 -26.84,13.523c-18.438,0 -33.437,-15 -33.437,-33.438c0,-7.834 2.715,-15.041 7.243,-20.746l-37.572,-53.553c-3.807,-5.424 -2.494,-12.908 2.932,-16.715c5.424,-3.807 12.909,-2.494 16.715,2.932l38.658,55.1c1.777,-0.295 3.601,-0.453 5.461,-0.453c17.346,0 31.646,13.279 33.276,30.205l45.673,14.893c6.302,2.055 9.744,8.828 7.689,15.129c-1.65,5.064 -6.351,8.283 -11.405,8.283z\"/>\n     <path stroke=\"null\" id=\"svg_9\" fill=\"none\" d=\"m335.303058,328.0974c-5.203,0 -9.437,4.232 -9.437,9.436c0,5.203 4.233,9.438 9.437,9.438c5.203,0 9.435,-4.234 9.435,-9.438c0.001,-5.203 -4.232,-9.436 -9.435,-9.436z\"/>\n     <path stroke=\"null\" id=\"svg_10\" fill=\"{color2}\" d=\"m191.513058,153.0054c-12.267,0 -23.8,4.777 -32.474,13.451c-14.973,14.973 -17.426,37.795 -7.361,55.34l62.711,-62.711c-6.884,-3.966 -14.718,-6.08 -22.876,-6.08z\"/>\n     <path stroke=\"null\" id=\"svg_11\" fill=\"{color2}\" d=\"m479.092058,153.0054c-8.158,0 -15.992,2.113 -22.877,6.08l62.711,62.711c10.065,-17.545 7.611,-40.367 -7.359,-55.34c-8.674,-8.673 -20.207,-13.451 -32.475,-13.451z\"/>\n     <path stroke=\"null\" id=\"svg_12\" fill=\"{color1}\" d=\"m335.303058,193.6114c-79.359,0 -143.923,64.563 -143.923,143.922s64.563,143.922 143.923,143.922s143.922,-64.563 143.922,-143.922s-64.562,-143.922 -143.922,-143.922zm0,263.844c-66.126,0 -119.923,-53.797 -119.923,-119.922s53.797,-119.922 119.923,-119.922c66.125,0 119.922,53.797 119.922,119.922s-53.797,119.922 -119.922,119.922z\"/>\n     <path stroke=\"null\" id=\"svg_13\" fill=\"{color1}\" d=\"m516.055058,337.5334c0,-99.668 -81.086,-180.752 -180.752,-180.752c-99.668,0 -180.754,81.084 -180.754,180.752c0,53.789 23.625,102.154 61.033,135.295l-23.261,38.205c-3.447,5.66 -1.652,13.043 4.008,16.49c1.949,1.186 4.104,1.752 6.23,1.752c4.049,0 8,-2.051 10.26,-5.762l21.859,-35.898c28.781,19.359 63.406,30.67 100.625,30.67c37.218,0 71.842,-11.31 100.623,-30.67l21.859,35.898c2.26,3.713 6.211,5.762 10.261,5.762c2.126,0 4.28,-0.566 6.23,-1.752c5.66,-3.447 7.455,-10.83 4.009,-16.49l-23.263,-38.205c37.408,-33.141 61.033,-81.506 61.033,-135.295zm-180.752,156.752c-86.434,0 -156.754,-70.318 -156.754,-156.752s70.32,-156.752 156.754,-156.752s156.752,70.318 156.752,156.752s-70.318,156.752 -156.752,156.752z\"/>\n     <path stroke=\"null\" id=\"svg_15\" fill=\"{color1}\" d=\"m240.959058,166.4584c2.25,-2.252 3.514,-5.303 3.514,-8.486c0,-3.182 -1.264,-6.234 -3.514,-8.484c-13.208,-13.207 -30.768,-20.483 -49.446,-20.483c-18.679,0 -36.237,7.273 -49.444,20.48c-27.264,27.266 -27.264,71.627 0,98.891c2.344,2.344 5.414,3.516 8.484,3.516c3.072,0 6.143,-1.172 8.486,-3.516l81.92,-81.918zm-81.92,-0.002c8.674,-8.674 20.207,-13.451 32.474,-13.451c8.158,0 15.992,2.113 22.876,6.08l-62.711,62.711c-10.064,-17.545 -7.611,-40.367 7.361,-55.34z\"/>\n     <path stroke=\"null\" id=\"svg_16\" fill=\"{color1}\" d=\"m528.538058,149.4864c-13.208,-13.207 -30.768,-20.48 -49.445,-20.48c-18.678,0 -36.238,7.275 -49.445,20.482c-2.251,2.25 -3.516,5.303 -3.516,8.484c0,3.184 1.265,6.234 3.516,8.486l81.919,81.918c2.343,2.344 5.414,3.516 8.485,3.516c3.07,0 6.143,-1.172 8.485,-3.516c27.264,-27.263 27.264,-71.625 0.001,-98.89zm-9.612,72.31l-62.711,-62.711c6.885,-3.967 14.719,-6.08 22.877,-6.08c12.268,0 23.801,4.777 32.475,13.451c14.971,14.973 17.425,37.795 7.359,55.34z\"/>\n    </g>\n   </g>\n  </g>\n  <text text-anchor=\"middle\" style=\"cursor: move;\" font-weight=\"bold\" stroke=\"null\" transform=\"matrix(1.599530816078186,0,0,1.599530816078186,-26.154531851410866,-19.859458282589912) \" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"'Monospace', Monospace\" font-size=\"24\" id=\"svg_34\" y=\"51.312034\" x=\"46.873909\" stroke-opacity=\"null\" stroke-width=\"0\" fill=\"#ff7f00\">{time}</text>\n </g>\n</svg>\n`\n\nexport default Clock;","/**\r\n * Mock Data 主要是测试的时候用于模拟数据\r\n */\r\n\r\n/**\r\n * tableStore \r\n * restore(data) 的参数数据。\r\n */\r\n// export const restoreData = {\r\n//     scene: 2,\r\n//     //deals: 'K34.J3.Q742.K832 XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX',\r\n//     deals: 'XXX.J3.Q742.K832 XXX.XX.XXXX.XXXX XXX8.A5.J853.QT4 XXX.XX.XXXX.XXXX',\r\n//     //deals: 'XXX.XX.XXXX.XXXX XXX.XX.XXXX.XXXX XXX.XX.XXXX.XXXX XXX.XX.XXXX.XXXX',\r\n//     //deals: 'K34.X.X.X XXX.X.X.X X.X.X.XXT4 X.XX.X.X',\r\n//     claim: { seat: 'E', msg: '3NT X +3' },\r\n//     winEW: 2,\r\n//     winSN: 3,\r\n//     dummySeat: 'N',\r\n//     curCall: '3H',\r\n//     contract: '3NT X',\r\n//     user: {\r\n//         E: { ready: 1, name: '张三', face: '/imgs/face1.png', rank: '大师', seat: 'E' },\r\n//         S: { ready: 0, name: '', face: '', rank: '', seat: '' },\r\n//         W: { ready: 0, name: '', face: '', rank: '', seat: '' },\r\n//         N: { ready: 0, name: '', face: '', rank: '', seat: '' }\r\n//     },\r\n//     calldata: {\r\n//         first: 'S',\r\n//         call: [\r\n//             ['1C =1=', 'PASS', 'PASS', '2H'],\r\n//             ['PASS', 'PASS', '3C =2=', 'PASS'],\r\n//             ['PASS', '3H', 'PASS', 'PASS'],\r\n//             ['3S =3=', 'PASS', 'PASS', '3NT =4='],\r\n//         ],\r\n//         note: [\r\n//             \"约定叫1：说明内容预先输入...\",\r\n//             \"约定叫2：说明内容预先输入...\",\r\n//             \"约定叫3：说明内容预先输入...\",\r\n//             \"约定叫4：说明内容预先输入...\",\r\n//         ]\r\n//     },\r\n//     // userCards: [\r\n//     //     ['SK', 'S3', 'S4', 'HJ', 'H3', 'DQ', 'D4', 'D2', 'CK', 'C8', 'C3'],\r\n//     //     ['SX', 'SX', 'SX', 'HX', 'HX', 'HX', 'DX', 'DX', 'DX', 'CX', 'CX', 'CX'],\r\n//     //     ['SQ', 'SJ', 'S9', 'S8', 'HA', 'H5', 'DJ', 'D8', 'D3', 'CT', 'C4'],\r\n//     //     ['SX', 'SX', 'SX', 'SX', 'SX', 'HX', 'HX', 'HX', 'HX', 'DX', 'CX'],\r\n//     // ],\r\n//     userCards: [\r\n//         [ 'HJ', 'H3', 'DQ', 'D4', 'D2', 'CK', 'C8', 'C3'],\r\n//         [ 'HX', 'HX', 'HX', 'DX', 'DX', 'DX', 'CX', 'CX', 'CX'],\r\n//         [ 'S8', 'HA', 'H5', 'DJ', 'D8', 'D3', 'CT', 'C4'],\r\n//         [ 'SX', 'SX', 'HX', 'HX', 'HX', 'HX', 'DX', 'CX'],\r\n//     ],\r\n\r\n//     board: [ // 这里seat 为固定的图形方位，非业务逻辑方位\r\n//         [{ seat: 'S', card: 'D5' }, { seat: 'W', card: 'D6' }, { seat: 'N', card: 'D7' }],\r\n//         [{ seat: 'W', card: 'C6' }, { seat: 'N', card: 'C2' }, { seat: 'E', card: 'C7' }, { seat: 'S', card: 'CQ' }],\r\n//     ],\r\n\r\n// }\r\nconst deal  = \"QJ6.K652.J85.T98 873.J97.AT764.Q4 K5.T83.KQ9.A7652 AT942.AQ4.32.KJ3\"\r\nconst deal1 = \"QJ6.K652.J85.T98 XXX.XXX.XXXXX.XX K5.T83.KQ9.A7652 XXXXX.XXX.XX.XXX\"\r\nconst deal2 = \"J6.K652.J85.T9 XX.XXX.XXXXX.X 5.T83.KQ9.A765 XXXXX.XXX.XX.XX\"\r\n// C8,C4,C2,C3  上一墩\r\n// SQ,S8,SK     当前墩\r\n\r\nfunction genUserCards(deal){\r\n    const suits=\"SHDC\";\r\n    const hands = deal.split(\" \");\r\n    return hands.map((hand)=>{\r\n        let h = [];\r\n        hand.split(\".\").forEach((suit,i)=>{\r\n            suit.split(\"\").forEach((card)=>h.push(suits[i]+card))\r\n        })\r\n        return h;\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const restoreData = {\r\n    scene: 2,\r\n    // SHCD\r\n    //deals: 'K34.J3.Q742.K832 XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX',\r\n    //deals: 'XXX.J3.Q742.K832 XXX.XX.XXXX.XXXX XXX8.A5.J853.QT4 XXX.XX.XXXX.XXXX',\r\n    deals: \"...XXXXXXXXXXXXX 43.5..XXXXXXXXXX 7..A.XXXXXXXXXXX ...XXXXXXXXXXXXX\",\r\n    //deals: 'XXX.XX.XXXX.XXXX XXX.XX.XXXX.XXXX XXX.XX.XXXX.XXXX XXX.XX.XXXX.XXXX',\r\n    //deals: 'K34.X.X.X XXX.X.X.X X.X.X.XXT4 X.XX.X.X',\r\n    claim: { seat: 'E', msg: '3NT X +3' },\r\n    winEW: 2,\r\n    winSN: 3,\r\n    dummySeat: 'E',\r\n    curCall: '3NT',\r\n    contract: '3NT X',\r\n    user: {\r\n        E: { ready: 1, name: '张三', face: '/imgs/face1.png', rank: '大师', seat: 'E' },\r\n        S: { ready: 0, name: '', face: '', rank: '', seat: '' },\r\n        W: { ready: 0, name: '', face: '', rank: '', seat: '' },\r\n        N: { ready: 0, name: '', face: '', rank: '', seat: '' }\r\n    },\r\n    calldata: {\r\n        first: 'S',\r\n        call: [\r\n            ['1C =1=', 'PASS', 'PASS', '2H'],\r\n            ['PASS', 'PASS', '3C =2=', 'PASS'],\r\n            ['PASS', '3H', 'PASS', 'PASS'],\r\n            ['3S =3=', 'PASS', 'PASS', '3NT =4='],\r\n        ],\r\n        note: [\r\n            \"约定叫1：说明内容预先输入...\",\r\n            \"约定叫2：说明内容预先输入...\",\r\n            \"约定叫3：说明内容预先输入...\",\r\n            \"约定叫4：说明内容预先输入...\",\r\n        ]\r\n    },\r\n    // userCards: [\r\n    //     ['SK', 'S3', 'S4', 'HJ', 'H3', 'DQ', 'D4', 'D2', 'CK', 'C8', 'C3'],\r\n    //     ['SX', 'SX', 'SX', 'HX', 'HX', 'HX', 'DX', 'DX', 'DX', 'CX', 'CX', 'CX'],\r\n    //     ['SQ', 'SJ', 'S9', 'S8', 'HA', 'H5', 'DJ', 'D8', 'D3', 'CT', 'C4'],\r\n    //     ['SX', 'SX', 'SX', 'SX', 'SX', 'HX', 'HX', 'HX', 'HX', 'DX', 'CX'],\r\n    // ],\r\n    // userCards: [\r\n    //     [ 'HJ', 'H3', 'DQ', 'D4', 'D2', 'CK', 'C8', 'C3'],\r\n    //     [ 'HX', 'HX', 'HX', 'DX', 'DX', 'DX', 'CX', 'CX', 'CX'],\r\n    //     [ 'S8', 'HA', 'H5', 'DJ', 'D8', 'D3', 'CT', 'C4'],\r\n    //     [ 'SX', 'SX', 'HX', 'HX', 'HX', 'HX', 'DX', 'CX'],\r\n    // ],\r\n    userCards:[\r\n        [\"CX\", \"CX\"],\r\n        [\"S4\", \"S3\", \"H5\"],\r\n        [\"S7\", \"CA\"],\r\n        [\"CX\", \"CX\"]\r\n    ],\r\n    board:[\r\n        [{seat: \"S\", card: \"HA\"},{seat: \"W\", card: \"HJ\"},{seat: \"N\", card: \"H7\"}],\r\n        [{seat: \"S\", card: \"HK\"},{seat: \"W\", card: \"HT\"},{seat: \"N\", card: \"H6\"},{seat: \"E\", card: \"H4\"}],\r\n    ]\r\n\r\n    // board: [ // 这里seat 为固定的图形方位，非业务逻辑方位\r\n    //     [{ seat: 'S', card: 'D5' }, { seat: 'W', card: 'D6' }, { seat: 'N', card: 'D7' }],\r\n    //     [{ seat: 'W', card: 'C6' }, { seat: 'N', card: 'C2' }, { seat: 'E', card: 'C7' }, { seat: 'S', card: 'CQ' }],\r\n    // ],\r\n\r\n}\r\n\r\nexport const callData1 = {\r\n    first: 'S',\r\n    call: [\r\n        ['-', '-', 'PASS', '2H'],\r\n        ['PASS', 'PASS', '3C =2=', 'PASS'],\r\n        ['PASS', '3H', 'PASS', 'PASS'],\r\n        ['3S =3=', 'PASS', 'PASS', ''],\r\n    ],\r\n    note: [\r\n        \"约定叫1：说明内容预先输入...\",\r\n        \"约定叫2：说明内容预先输入...\",\r\n        \"约定叫3：说明内容预先输入...\"\r\n    ]\r\n}\r\n\r\nexport const callData2 = {\r\n    first: 'S',\r\n    call: [\r\n        ['1C =1=', 'PASS', 'PASS', '2H'],\r\n        ['PASS', 'PASS', '3C =2=', 'PASS'],\r\n        ['PASS', '3H', 'PASS', 'PASS'],\r\n        ['3S =3=', 'PASS', 'PASS', '3NT =4='],\r\n    ],\r\n    note: [\r\n        \"约定叫1：说明内容预先输入...\",\r\n        \"约定叫2：说明内容预先输入...\",\r\n        \"约定叫3：说明内容预先输入...\",\r\n        \"约定叫4：说明内容预先输入...\",\r\n    ]\r\n}\r\n\r\nexport const userData1 = {\r\n    E: { ready: 0, name: '张三', face: '/imgs/face1.png', rank: '大师', seat: 'E' },\r\n    S: { ready: 0, name: '李四', face: '/imgs/face2.png', rank: '专家', seat: 'S' },\r\n    W: { ready: 0, name: '王五', face: '/imgs/face1.png', rank: '王者', seat: 'W' },\r\n    N: { ready: 0, name: '赵六', face: '/imgs/face2.png', rank: '钻石', seat: 'N' }\r\n};\r\nexport const userData2 = {\r\n    E: { ready: 0, name: '张三', face: '/imgs/face1.png', rank: '大师', seat: 'E' },\r\n    S: { ready: 0, name: '', face: '', rank: '', seat: '' },\r\n    W: { ready: 0, name: '', face: '', rank: '', seat: '' },\r\n    N: { ready: 0, name: '', face: '', rank: '', seat: '' }\r\n};","/**\n * todo： 仔细考虑下 TableModel 的设计。静态属性的问题。\n * import { TableModel } from '../models/Table';\n * import TableModels from '../models/Table';\n */\n\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport { TableModel } from '../../stores/tableStore';\nimport Card,{ACT1} from '../../components/Card';\nimport Clock from '../../libs/Clock';\nimport Position from '../../common/Position';\n//import { tokensToRegExp } from 'path-to-regexp';\nimport {restoreData,callData1,callData2} from '../../stores/mockdata';\n\n/**\n * props.o  \n * 就是 调用 Debug 组件的父组件 Table\n * 我们为了测试 Table 把 Table 传递进来，然后进行测试。\n * \n * 注意在 render 定义方法，可能造成重复定义的问题。以为是测试用例，暂且这样\n */\nexport default class Debug extends Component {\n    render() {\n        const o = this.props.o;  // o 是 table.js\n\n        /**\n         * 从上级组件 传递古来 Table 实例。\n         * 然后给 Table 实例添加了一些测试用例。\n         * 如果不添加本 测试代码。这些方法就不会加载给 Table\n         */\n        // =====  测试用例开始 =================================================\n        /**\n         * TODO：把这个组件移出去。单独测试。\n         * 给某一个座位倒计时\n         * 为了降低组件的耦合性。将本组件动态挂载到 DOM 上。\n         * 利用 unmountComponentAtNode 进行卸载。\n         * p, offset 都是闹钟出现位置的微调。\n         * \n         * seat [east,west,south,north]\n         * time 倒计时妙数\n         * callback 倒计时结束回调。\n         */\n        o.timing11 = function (seat, time, callback) {\n            const height = this.props.tableStore.height;\n            ReactDOM.unmountComponentAtNode(document.querySelector('#clock'));\n            const p = height * 0.18;\n            const offset = {\n                E: { x: p, y: 0 },\n                S: { x: 0, y: p },\n                W: { x: -p * 0.66, y: 0 },\n                N: { x: 0, y: -p * 0.66 }\n            }\n\n            const top = this.props.tableStore.seat[seat][1]['y'] + offset[seat].y;\n            const left = this.props.tableStore.seat[seat][1]['x'] + offset[seat].x;\n            const style = {\n                position: 'absolute',\n                top: top,\n                left: left,\n                width: '8%'\n            }\n            const clock = (\n                <div style={style}>\n                    <Clock time={time} callback={callback} />\n                </div>\n            );\n            ReactDOM.render(\n                clock,\n                document.querySelector('#clock')\n            )\n        }\n        o.timing = function (seat, time, callback) {\n            const unseat = new Position(seat).lshift(1).sn;\n            ReactDOM.unmountComponentAtNode(document.querySelector('.'+unseat+'clock'));\n            \n            ReactDOM.render(\n                <Clock time={time} callback={callback} />,\n                document.querySelector('.'+seat+'clock')\n            )\n        }\n        o.testClock = function () {\n            this.timing('E', 10,\n                () => this.timing('S', 10,\n                    () => this.timing('W', 10,\n                        () => this.timing('N', 10,\n                            () => console.log('倒计时结束！')\n                        )\n                    )\n                )\n            )\n        }\n        /**\n         * 测试出牌\n         * 简单测试，已无实际用途。\n         */\n        o.test1 = function () {\n            const cards = this.state.cards;\n            cards[0][0].animation = {\n                top: 200,\n                left: 200,\n            }\n            this.setState({\n                cards: cards\n            })\n        }\n        /**\n         * 设置牌的 active 状态。\n         * 把编号 在nums里 的牌设置成 active 状态\n         * nums 是一个数组\n         * active 是目标状态。*      \n         * active     0,1,2,3  0 灰色不能点，1 亮色不能点，2 亮色能点, 3 亮色能点突出\n         */\n        o.testActive = function () {\n            // 52 张牌 对应 东南西北 四个人的牌\n            const nums = [\n                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n                13, 14, 15, 16, //17, 18, 19, 20, 21, 22, 23, 24, 25,\n                26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n                39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]\n            this.props.tableStore.setActive(nums, 0);\n\n        }\n        o.showTableId = () => {\n            alert(o.props.tableStore.tableId);\n        }\n        o.test3 = function () {\n            this.clearBoard();\n        }\n        /**\n         * 打开明手的牌。\n         * 从 Models 获得数据。\n         * 修改 seat 方位可以打开不同方位的牌。\n         */\n        o.testDummy = function (){\n            o.openDummy();\n        }\n        o.testDummy1 = function (seat1) {\n            const seat = seat1;\n            let index = 0\n            const dCards = 'K.KJT732.964.A52'.split('.');\n            let cards = o.props.tableStore.state.cards[TableModel.seats.indexOf(seat)];\n            console.log('seatnumber:',dCards);\n            dCards.forEach((item1, index1) => {\n                item1.split('').forEach((item2, index2) => {\n                    // 这里。\n                    cards[index].card = item2 + Card.suits[index1]\n                    cards[index].onclick = o.play(cards[index]);\n                    index++;\n                })\n            })\n            //this.state.cards[Table.seatsen.indexOf(seat)] = cards;\n            // this.setState({\n            //     cards: o.props.tableStore.state.cards\n            // })\n            //this.props.tableStore.state.cards = \n            console.log('openDummy..............')\n            console.log(o.props.tableStore.state.cards)\n\n        }\n        /**\n     * 测试上以墩牌的显示\n     */\n        o.testLastTrick = function () {\n            this.lastTrick(false);\n            // if(this._showLastTrick) this._showLastTrick = false;\n            // else this._showLastTrick = true;\n            // this.lastTrick(this._showLastTrick);\n        }\n        /**\n       * 叫牌测试\n       */\n        o.testBid1 = function(){\n            o.props.tableStore.state.calldata = callData1;\n        }\n        o.testBid2 = function(){\n            o.props.tableStore.state.calldata = callData2;\n        }\n\n        // 准备废弃\n        // o.testBid2 = function () {\n        //     const bids = [{ seat: 'W', bid: 'A1C' }, { seat: 'N', bid: 'PASS' },\n        //     { seat: 'E', bid: 'PASS' }, { seat: 'S', bid: '2H' },\n        //     { seat: 'W', bid: 'PASS' }, { seat: 'N', bid: 'PASS' },\n        //     { seat: 'E', bid: 'A3C' }, { seat: 'S', bid: 'PASS' },\n        //     { seat: 'W', bid: 'PASS' }, { seat: 'N', bid: '3H' },\n        //     { seat: 'E', bid: 'PASS' }, { seat: 'S', bid: 'PASS' },\n        //     { seat: 'W', bid: 'A3S' }, { seat: 'N', bid: 'PASS' },\n        //     { seat: 'E', bid: 'PASS' }, { seat: 'S', bid: 'PASS' }]\n\n        //     const bids1 = [{ seat: 'west', bid: 'A1C' }, { seat: 'north', bid: 'PASS' },\n        //     { seat: 'east', bid: 'PASS' }, { seat: 'south', bid: '2H' },\n        //     { seat: 'west', bid: 'PASS' }, { seat: 'north', bid: 'PASS' },\n        //     { seat: 'east', bid: 'A3C' }, { seat: 'south', bid: 'PASS' },\n        //     { seat: 'west', bid: 'PASS' }, { seat: 'north', bid: '3H' },\n        //     { seat: 'east', bid: 'PASS' }, { seat: 'south', bid: 'PASS' },\n        //     { seat: 'west', bid: 'A3S' }, { seat: 'north', bid: 'PASS' },\n        //     { seat: 'east', bid: 'PASS' }, { seat: 'south', bid: 'PASS' }]            \n        //     bids.forEach((item) => {\n        //         o.props.tableStore.call(item.seat, item.bid)\n        //     })\n        //     console.log('calldata111....')\n        //     //console.log(this.state.calldata)\n        //     o.setState({\n        //         calldata: o.props.tableStore.state.calldata\n        //     })\n        // }\n\n        o.testUsersReady = function () {\n            const login = (seat, uname) => {\n                this.state.user[seat].name = uname;\n                this.setState({ user: this.state.user })\n            }\n            setTimeout(login.bind(this, 'east', '张三丰'), 1000)\n            setTimeout(login.bind(this, 'south', '李四'), 2000)\n            setTimeout(login.bind(this, 'west', '王五'), 3000)\n            setTimeout(login.bind(this, 'north', '赵六'), 4000)\n        }\n\n        o.testChat = function () {\n            const elMsg = document.querySelector('#message')\n            const elSay = document.querySelector('#say')\n            elMsg.innerHTML =\n                \"<div>\" + o.props.tableStore.myseat + ':' + elSay.value + \"</div>\" + elMsg.innerHTML\n        }\n\n        // 给所有牌添加可点击，可以测试出牌\n        o.addClick = function () {\n            // 南 方块 可点击。\n            const tableStore = o.props.tableStore;\n            //let cards = tableStore.selectCards([0,1,2,3], 'SHDC');\n            let cards = tableStore.selectCardsByAct([ACT1.L]);\n            tableStore.setCardsState(cards, { active: ACT1.LC, onclick: tableStore.play });\n        }\n\n        // 部分牌可点击\n        o.addClick1 = function () {\n            // 南 方块 可点击。\n            const tableStore = o.props.tableStore;\n            let cards = tableStore.selectCards(\"S\", 'D');console.log(cards)\n            tableStore.setCardsState(cards, { active: ACT1.LC, onclick: tableStore.play });\n            // 其他牌都不可点击\n            cards = tableStore.selectCards(\"NEW\", 'SHDC');\n            tableStore.setCardsState(cards, {active: ACT1.L, onclick: tableStore.play});\n            cards = tableStore.selectCards(\"S\", 'SHC');\n            tableStore.setCardsState(cards, {active: ACT1.D, onclick: tableStore.play,});\n            //o.props.tableStore.addClick2Cards(cards, 0);\n        }\n\n\n        // 测试 出牌的位置。左上角坐标。用于参考。\n        o.testSeat = function () {\n            const top = o.props.tableStore.seat['south'][1]['y'];\n            const left = o.props.tableStore.seat['south'][1]['x'];\n\n            const style = {\n                position: 'absolute',\n                border: '1px solid red',\n                width: '5px',\n                top: top,\n                left: left,\n                height: '5px'\n            };\n            const dv1 = <div id=\"testDiv\" style={style}></div>;\n            const testDiv = document.querySelector('#testDiv');\n            if (testDiv) ReactDOM.unmountComponentAtNode(document.querySelector('#clock'));\n            else ReactDOM.render(dv1, document.querySelector('#clock'))\n\n        }\n        // \n        // o.restore1 = function (){\n        //     // const deals = 'K34.J3.Q742.K832 XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX';\n        //     const cards = o.props.tableStore.dealCards();\n        //     const userCards = [\n        //         ['SK','S3','S4','HJ','H3','DQ','D4','D2','CK','C8','C3'],\n        //         ['SX','SX','SX','HX','HX','HX','DX','DX','DX','CX','CX','CX'],\n        //         ['SQ','SJ','S9','S8','HA','H5','DJ','D8','D3','CT','C4'],\n        //         ['SX','SX','SX','SX','SX','HX','HX','HX','HX','DX','CX'],\n        //     ];\n        //     // 出牌顺序同下标顺序,(业务方位？)\n        //     const board = [\n        //         [{seat:'S',card:'D5'},{seat:'W',card:'D6'},{seat:'N',card:'D7'}],\n        //         [{seat:'W',card:'C6'},{seat:'N',card:'C2'},{seat:'E',card:'C7'},{seat:'S',card:'CQ'}],\n        //     ];\n        //     o.props.tableStore.restore_2(userCards,board);\n\n        // }\n        /**\n         * scene: 0 准备阶段，1 叫牌阶段，2 打牌阶段，3 摊牌阶段\n         * restoreData 模拟数据\n         */\n        o.restore = function(){\n            const data = restoreData;\n            //data.scene = 3;\n            //o.props.tableStore['restore'+data.scene](data);\n            o.props.tableStore.restore(data);\n            window.___board = o.props.tableStore.board;\n\n        }\n\n\n        o.dplay = function(){\n            o.props.tableStore.dplay('E','S2');\n        }\n\n        o.wLogin = function(){\n            o.props.tableStore.userLogin('S',{ ready: 0, name: '王五', face: '/imgs/face1.png', rank: '王者', seat: 'S' });\n            o.props.tableStore.userLogin('W',{ ready: 0, name: '王五', face: '/imgs/face1.png', rank: '王者', seat: 'W' });\n        }\n        o.initcards = function(){\n            //const deals = \"K34.J3.Q742.K832 XXX.XX.XXXX.XXXX QJ98.A5.J853.QT4 XXX.XX.XXXX.XXXX\";\n            const deals = \"...XXXXXXXXXXXXX 43.5..XXXXXXXXXX 7...AXXXXXXXXXXX ...XXXXXXXXXXXXX\"\n            o.props.tableStore.initCards(deals);\n\n            //setTimeout(o.dplay,5000);\n        }\n        \n        // =====  测试用例结束 =================================================\n\n        return (\n            <div className='debug' style={{ position: 'absolute' }}>\n                <button onClick={o.testUsersReady}>登录</button>&nbsp;\n                <button onClick={o.wLogin}>西玩家登录</button>&nbsp;\n                <button onClick={o.initcards}>准备牌</button>&nbsp;\n                <button onClick={o.deal}>发牌</button>&nbsp;\n                <button onClick={o.testSeat}>出牌位置显示</button>&nbsp;\n                <button onClick={o.test1.bind(o)}>出牌</button>&nbsp;\n                <button onClick={o.addClick1}>阻止出牌</button>&nbsp;\n                <button onClick={o.test3.bind(o)}>清理桌面</button>&nbsp;\n                <br />\n                <button onClick={o.testDummy.bind(o, 'east')}>明手东</button>&nbsp;\n                <button onClick={o.testDummy.bind(o, 'west')}>明手西</button>&nbsp;\n                <button onClick={o.testDummy.bind(o, 'north')}>明手北</button>&nbsp;\n                {/* <button onClick={o.timer.start.bind(o,'ew')}>东西计时</button>&nbsp;\n                <button onClick={o.timer.start.bind(o,'sn')}>南北计时</button>&nbsp; */}\n                <br />\n                <button onClick={o.bid.bind(o)}>显示叫牌</button>&nbsp;\n                <button onClick={o.testBid1.bind()}>叫牌</button>&nbsp;\n                <button onClick={o.testBid2.bind()}>叫牌1</button>&nbsp;\n                <button onClick={o.testClock.bind(o)}>倒计时</button>&nbsp;\n                <button onClick={o.testLastTrick.bind(o)}>上一墩牌</button>&nbsp;\n                <br />\n                <button onClick={o.restore}>断线重连</button>&nbsp;\n                <button onClick={o.addClick}>牌可点击</button>&nbsp;\n                <button onClick={o.showResult}>显示结果</button>&nbsp;\n                <button onClick={o.showTableId}>显示桌号</button>&nbsp;\n                <button onClick={o.dplay}>东出牌</button>&nbsp;\n                <button onClick={o.initCards}>初始化</button>&nbsp;\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\r\nimport TweenOne from 'rc-tween-one';\r\nimport './Claim.css';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n/**\r\n* props\r\n* number 剩余数字\r\n* active 点击状态\r\n* myclaim 是否自己　claim   true,false\r\n*/\r\n@inject('tableStore')\r\n@observer\r\nclass Claim extends Component {\r\n\r\n    state = {\r\n        number: 0,\r\n        value: -1,\r\n        submit: 0,\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.value = -1;\r\n    }\r\n\r\n    handleClick = (value) => {\r\n        console.log('ccc...')\r\n        this.setState({\r\n            value: value\r\n        })\r\n    }\r\n    // componentDidMount() {\r\n    //     this.state.number = this.props.tableStore.getUnPlayCardNumber();\r\n    // }\r\n    handleSubmit = (value) => {\r\n        if (value === 2) {\r\n            if (this.state.value === -1) return;\r\n            this.setState({\r\n                submit: 1\r\n            }) \r\n        } else if (value === 3) {\r\n            this.props.tableStore.state.scene = 2;\r\n        } else {\r\n           \r\n            this.setState({submit:1})\r\n        }\r\n    }\r\n    handleSubmit1 = () => {\r\n\r\n    }\r\n\r\n    myClaim() {\r\n        const number = this.props.tableStore.getUnPlayCardNumber();\r\n        const cblocks = Array(number + 1).fill('').map((_, index) =>\r\n            <Cblock key={index} number={index}\r\n                active={this.state.value === index ? 0 : 1}\r\n                onClick={this.state.submit ? null : this.handleClick.bind(this, index)} />\r\n        )\r\n        return (\r\n            <div id='myclaim' className='claim'>\r\n                <b>剩下还可赢：</b><br />\r\n                {cblocks}\r\n                <div style={{ clear: \"both\" }}></div>\r\n                {this.state.submit ?\r\n                    <button disabled='true'>等待确认..</button> :\r\n                    <div>\r\n                        <button onClick={this.handleSubmit.bind(this, 3)}>取消</button>\r\n                        <button onClick={this.handleSubmit.bind(this, 2)}>确认</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    oClaim() {\r\n        const claimMsg = this.props.tableStore.state.claim.msg;\r\n        const dummySeat = this.props.tableStore.dummySeat;\r\n        const buttons = this.state.submit ? <div><i><br />等待搭档确认..</i></div> : \r\n        <div>\r\n            <button onClick={this.handleSubmit.bind(this, 1)}>同意1</button>\r\n            <button onClick={this.handleSubmit.bind(this, 0)}>拒绝1</button>\r\n        </div>\r\n\r\n        return (\r\n            <div id='otherclaim' className='claim'>\r\n                <br />\r\n                {claimMsg}\r\n                {dummySeat === 'S' ? <div><i><br />等待确认..</i></div> : buttons}\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        const myClaim = this.myClaim();\r\n        const otherClaim = this.oClaim();\r\n        return (\r\n            this.props.tableStore.state.claim.seat === this.props.tableStore.myseat\r\n                ? myClaim : otherClaim\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Cblock extends Component {\r\n    /**\r\n     * 参考 bidblocks\r\n     * props.number 数字\r\n     */\r\n    render() {\r\n        const animation = (this.props.active === 0) ?\r\n            { brightness: 0.6 } : { brightness: 1 }\r\n        return (\r\n            <TweenOne\r\n                animation={{\r\n                    ...animation,\r\n                    duration: 100,\r\n                    ease: 'easeOutQuint',       // 缓动参数 参考蚂蚁手册 easeOutExpo\r\n                }}\r\n                className='cblock'\r\n            >\r\n\r\n                <div className='cn1' onClick={this.props.onClick} style={{ backgroundColor: '#eeeeee' }}>\r\n                    {this.props.number}\r\n                </div>\r\n            </TweenOne>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Claim;","import React from 'react'\r\nimport { Modal, Button, Input } from 'antd';\r\nimport { useState,useCallback } from 'react'\r\nimport 'antd/dist/antd.css'\r\n\r\n// function AlertForm(){\r\n//   const [isShow, setIsShow] = useState(false);\r\n//   return(\r\n//     <h1>333333333</h1>\r\n//   );\r\n// }\r\n\r\nfunction AlertForm({bid,callback}) {\r\n  const [isShow, setIsShow] = useState(true)\r\n  const msgRef = React.useRef(null);\r\n  const cb = useCallback((value)=>{\r\n    setIsShow(false);\r\n    callback(msgRef.current.state.value);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title={`约定叫描述录入：${bid}`}\r\n        visible={isShow}\r\n        mask={false}\r\n        closable={false}\r\n        onOk={cb}\r\n        onCancel={cb}\r\n        footer={[\r\n          <Button type=\"primary\" onClick={()=>cb(1)}>确认</Button>,\r\n          <Button onClick={()=>cb(0)}>取消</Button>\r\n        ]}\r\n        style={{top:'20vh',left:'-30vh'}}\r\n      >\r\n      <Input ref={msgRef} placeholder=\"请在此处详细输入约定叫描述！\" />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlertForm;","/**\r\n * todo： bidBlock, bidCard 应该 重新封装成按钮。然后有尺寸和颜色参数。\r\n *        考虑本组件复杂度，提高后应该进行 mvc 改造。\r\n *        或者根据新睿桥牌 改造叫牌过程。\r\n */\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport Motion from '../../libs/Motion'\r\nimport './BidPanel.css'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { reaction } from 'mobx';\r\nimport Position from '../../common/Position';\r\n\r\n\r\nimport AlertForm from '../../components/AlertForm';\r\n\r\n/**\r\n * BidPanel 叫牌面板\r\n * \r\n * 输入：只有 props.calldata={table.state.calldata} active='1'\r\n * 输出：暂时只有 state 的变化。未形成任何输出。\r\n *      考虑应该 由 handleConfirm 事件，形成“最终叫品”\r\n */\r\n@inject('tableStore')\r\n@observer\r\nclass BidPanel extends Component {\r\n  state = {\r\n    bidblocks: [],\r\n    bidcards: [],\r\n    active: 1,\r\n    calling: \"\",\r\n    bidMsg:null   // 记得清空！！！\r\n  }\r\n  /**\r\n   * \r\n   * this.atDisposer = reaction() 查看 mobx 的手册。\r\n   * 因为使用 autorun 自动观察了当前组件bidpanel 的state 因此出现点击 bidBlock\r\n   * 时执行了 initpanel 的情况。initPanel 应该只在 cruCall 变的时候执行。\r\n   * 因此这里使用了 reaction 更加精确的控制。自动执行。\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n    this.width = window.screen.width;window.__BID = this\r\n    const suits = ['NT', 'S', 'H', 'D', 'C'];\r\n    const rank = [1, 2, 3, 4, 5, 6, 7];\r\n    const bids = rank.map((i) => suits.map((j) => i + j))\r\n    console.log(bids)\r\n    //this.state.calling = \"\";\r\n    const bidblocks = bids.map((e, i) => e.map((e1, i1) => {\r\n      //let active = (i<5 && i1<3) ? 1:0;\r\n      return { name: e1, active: 1 }\r\n    }))\r\n    this.state.bidcards = [\r\n      { name: 'PASS', active: 1 }, { name: 'ALERT', active: 1 },\r\n      { name: 'X', active: 1 }, { name: 'XX', active: 1 },]\r\n    // console.log('bbb................')\r\n    // console.log(bidblocks)\r\n    this.state.bidblocks = bidblocks;\r\n    this.ref = React.createRef();\r\n    //debugger;\r\n    //this.atDisposer = autorun(this.initPanel);  // 是否可以通过生命周期函数\r\n    this.atDisposer = reaction(\r\n      () => this.props.tableStore.curCall, \r\n      (data, reaction) => { this.initPanel(data) }, \r\n      {fireImmediately:true} // 这里 上面的函数立即执行一次。可查看mobx 手册\r\n    )\r\n    // 通过 props 修改不会引发重新渲染。\r\n    this.initPanel()\r\n  }\r\n  componentWillUnmount() {\r\n    this.atDisposer();\r\n  }\r\n  /**\r\n   * 处理 叫牌点击事件。\r\n   * 如果 item 是 row,col 则调用 _bidblock() 否则调用 _bidcard\r\n   */\r\n  handleCall = (item) => {\r\n    \r\n    //this.atDisposer();\r\n    this.state.bidMsg=null; // 清除约定叫提示信息。\r\n    if ('row' in item) {\r\n      this._bidblock(item);\r\n    } else {\r\n      this._bidcard(item);\r\n    }\r\n \r\n    //this.at = autorun(this.initPanel);\r\n  }\r\n\r\n  // getCallData() {\r\n  //   //window.__calldata = toJS(this.props.tableStore.state.calldata);\r\n  //   return this.props.tableStore.state.calldata;\r\n  // }\r\n\r\n  /**\r\n   * 处理 pass,alert,x,xx\r\n   * 这4个选项应该只能点击一个。\r\n   */\r\n  _bidcard = (item) => {\r\n    if (!this.state.active) return false;\r\n    // console.log('bidcards.........item...........')\r\n    // console.log(item)\r\n    if (item.name === 'ALERT') {\r\n      this.state.bidcards[1].active = !this.state.bidcards[1].active;\r\n    } else {\r\n      this.state.bidcards.forEach((e) => {\r\n        if (e.name === item.name) e.active = 0;\r\n        else e.active = 1;\r\n      })\r\n      this.state.bidblocks.map((item) => {\r\n        return item.map((i) => {\r\n          i.active = 1;\r\n          return i;\r\n        });\r\n      })\r\n    }\r\n\r\n    let calling = this.state.calling;\r\n    if (item.name === 'ALERT') {\r\n      if (this.state.calling.indexOf('ALERT') === -1) calling += ' ' + item.name;\r\n    } else calling = item.name;\r\n    this.setState({\r\n      bidblocks: this.state.bidblocks,\r\n      bidcards: this.state.bidcards,\r\n      calling: calling\r\n    })\r\n  }\r\n  /**\r\n   * 叫牌\r\n   * item 点击的叫品 行列坐标。{row, col}\r\n   * 点击某个叫品，其他叫品要联动（active=0/1）\r\n   */\r\n  _bidblock = (item) => {\r\n\r\n    // alert(item.row+\"--\"+item.col);\r\n    // window.___bidblocks = this.state.bidblocks;\r\n    if (!this.state.active) return false;\r\n    // console.log('item........................')\r\n    // console.log(item)\r\n    const bidblocks = this.state.bidblocks;\r\n    for (let i = 0; i < bidblocks.length; i++) {\r\n      for (let j = 0; j < bidblocks[i].length; j++) {\r\n        if (i < item.row || (i === item.row && j >= item.col))\r\n          if (bidblocks[i][j].active != null) bidblocks[i][j].active = 0;\r\n        if (i > item.row || (i === item.row && j < item.col))\r\n          if (bidblocks[i][j].active != null) bidblocks[i][j].active = 1;\r\n\r\n      }\r\n    }\r\n    this.state.bidcards.map((item) => {\r\n      item.active = 1;\r\n      return item;\r\n    })\r\n    //console.log('...item...',item,this.state.bidblocks[item.row][item.col]);  \r\n    this.setState({\r\n      bidblocks: this.state.bidblocks,\r\n      bidcards: this.state.bidcards,\r\n      calling: this.state.bidblocks[item.row][item.col].name\r\n    })\r\n  }\r\n  /**\r\n   * 确认提交\r\n   * 这里应该 补充 确认后，叫品是什么。比如：this.bid 记录最后叫品。\r\n   */\r\n  handleConfirm = () => {\r\n    // 调用 聊天打牌 发送数据\r\n    const msg = this.state.bidMsg;\r\n  \r\n    // this.state.calling = \"\";\r\n    this.setState({\r\n      calling:\"\",\r\n      bidcards:[\r\n        { name: 'PASS', active: 1 }, { name: 'ALERT', active: 1 },\r\n        { name: 'X', active: 1 }, { name: 'XX', active: 1 },]\r\n    })\r\n  }\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      bidblocks: this.state.bidblocks.map((item) => {\r\n        return item.map((i) => {\r\n          if (i.active != null) i.active = 1;\r\n          return i;\r\n        });\r\n      }),\r\n      bidcards: this.state.bidcards.map((item) => {\r\n        item.active = 1;\r\n        return item;\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 通过 curCall 初始化 bidPanel 隐藏无效的叫品。\r\n   */\r\n  initPanel = (data) =>{\r\n    //const curCall = \"4NT\";//this.props.tableStore.curCall;\r\n    const curCall = data;\r\n    \r\n    const bidblocks = this.state.bidblocks;\r\n    const suits = ['NT', 'S', 'H', 'D', 'C'];\r\n    if (curCall) {\r\n      bidblocks.splice(0, curCall.slice(0, 1) - 1 - (7 - bidblocks.length));\r\n      if (curCall.slice(1) === \"NT\") bidblocks.splice(0, 1) // 如果是 nt 直接删除本行\r\n      else bidblocks[0].forEach((item, index) => {\r\n        if (index >= suits.indexOf(curCall.slice(1))) item.active = null;\r\n      })\r\n    }\r\n    this.setState({ bidblocks: bidblocks })\r\n  }\r\n  /**\r\n   *\r\n   *\r\n   * @returns\r\n   * @memberof BidPanel\r\n   */\r\n  getCallRows() {\r\n    //debugger;\r\n    const { first, call, note } = this.props.tableStore.state.calldata;console.log(call)\r\n    const myseat = this.props.tableStore.myseat;\r\n    if (!first) return [];\r\n    const lsto = new Position('S').lsto(myseat);\r\n    const pos = [\r\n      new Position('W').lshift(lsto).cn,\r\n      new Position('N').lshift(lsto).cn,\r\n      new Position('E').lshift(lsto).cn,\r\n      new Position('S').lshift(lsto).cn,\r\n    ];\r\n    const header = <tr>\r\n      <td>&nbsp;</td><td>{pos[0]}</td><td>{pos[1]}</td><td>{pos[2]}</td><td>{pos[3]}</td>\r\n    </tr>\r\n\r\n    const rows = call.map((item, index) => {\r\n      console.log(item)\r\n      let call = null; // 用于处理 \"2H =1=\"\r\n      return <tr key={index}>\r\n        <td key='0'>&nbsp;{index + 1}</td>\r\n        {item.map((item1, index1) => {\r\n          call = item1.split(' ');\r\n          if (!call[0]) return ' ';\r\n          if (call.length === 2) {\r\n            call[1] = call[1].slice(1, 2);\r\n            return (\r\n              <td title={note[call[1] - 1]} key={index + index1 + 1} className='alertTd'>\r\n                <img className='suit' src={`cards/bids/${call[0]}.svg`} />\r\n              </td>\r\n            );\r\n          }\r\n          return (\r\n            <td key={index + index1 + 1}>\r\n              {call[0] === \"-\" ? '': // 如果是 \"-\" 则显示为空白\r\n              <img className='suit' src={`cards/bids/${call[0].toUpperCase()}.svg`} />}\r\n            </td>\r\n          );\r\n        })}\r\n      </tr>\r\n    })\r\n    return (\r\n      <table>\r\n        <thead>\r\n          {header}\r\n        </thead>\r\n        <tbody>\r\n          {rows}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n  render() {\r\n    //this.initPanel();  //zsx修改：解决根据叫品，隐藏部分叫牌\r\n    console.log('ffff:' + this.width)\r\n    const bidblocks = this.state.bidblocks.map((e1, i1) => e1.map((e2, i2) => {\r\n\r\n      //if (e2.active === 0) animation['brightness'] = 0.6;\r\n\r\n      return <BidBlock key={e2.name} name={e2.name}\r\n        active={e2.active}\r\n        onclick={this.handleCall.bind(this, { row: i1, col: i2 })} />\r\n    }))\r\n\r\n    // 叫牌记录。\r\n    const rows = this.getCallRows();console.log(123)\r\n    const showBlock = this.props.tableStore.bidState.showBlock;\r\n    const BidCards =  <Fragment>\r\n      <BidCard name='PASS' active={this.state.bidcards[0].active}\r\n        onclick={this.handleCall.bind(this, { name: 'PASS' })}\r\n      />\r\n      <BidCard name='X' active={this.state.bidcards[2].active}\r\n        onclick={this.handleCall.bind(this, { name: 'X' })}\r\n      />\r\n      <BidCard name='XX' active={this.state.bidcards[3].active}\r\n        onclick={this.handleCall.bind(this, { name: 'XX' })}\r\n      />\r\n      <BidCard name='ALERT' active={this.state.bidcards[1].active}\r\n        onclick={this.handleCall.bind(this, { name: 'ALERT' })}\r\n      />\r\n    </Fragment>\r\n\r\n    const opPad = <Fragment>\r\n      {bidblocks}\r\n      {BidCards}\r\n      <button onClick={this.handleConfirm}>确认</button>\r\n      <button onClick={this.handleReset}>重置</button>\r\n      <div className='calling'>{this.state.calling}</div>\r\n    </Fragment>\r\n    const callback = (value)=>{\r\n      if(value) {\r\n        this.state.bidMsg = value;\r\n        this.state.bidcards[1].active = 0;\r\n        this.setState({\r\n          bidcards: this.state.bidcards,\r\n        })\r\n      }else{\r\n        this.state.bidcards[1].active = 1;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div id='bidpanel' className='bidpanel' ref={this.ref}>\r\n        {this.state.bidcards[1].active ? null:\r\n          <AlertForm bid={this.state.calling} callback={callback} />\r\n        }\r\n        <div className=\"qqqqqqqqqqqqq\">\r\n          {rows}\r\n        </div>\r\n        {showBlock ? opPad : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/**\r\n * 输入： \r\n *    props.name    : 3NT 叫品\r\n *    props.active  : 0,1 是否可点击\r\n *    props.onclick : 由父组件做点击处理\r\n * 输出：\r\n *    props.onclick : 通过事件 影响 state.bidblocks，state.bidcards\r\n */\r\nclass BidBlock extends Component {\r\n  render() {\r\n    const suit = this.props.name.slice(-1);\r\n    const bgcolor = {\r\n      T: '#eeeeee', S: '#eeeeFF', H: '#FFeeee'\r\n      , D: '#ffffee', C: '#eeffee'\r\n    };\r\n    //const bgcolor = { T: '#eeeeee', S: '#eeeeee', H: '#eeeeee'\r\n    //  , D: '#eeeeee', C: '#eeeeee' };\r\n    const style = {\r\n      backgroundColor: `${bgcolor[suit]}`,\r\n    }\r\n    let animation = { brightness: 0 };\r\n    let onclick = this.props.onclick;\r\n    if (this.props.active === null) {\r\n      animation['opacity'] = 0;\r\n      onclick = (e) => e.preventDefault();\r\n    }\r\n    if (this.props.active === 0) animation['brightness'] = 0.6;\r\n    if (this.props.active === 1) animation['brightness'] = 1;\r\n\r\n    return (\r\n      <Motion animation={animation} className='bidblock'>\r\n        <div className='cn1' onClick={onclick} style={style}>\r\n          <img className='suit' src={`cards/bids/${this.props.name}.svg`} />\r\n        </div>\r\n      </Motion>\r\n    );\r\n  }\r\n}\r\n/**\r\n * 输入：\r\n *    props.name    ：PASS,ALERT,X,XX\r\n *    props.active  ：1 （亮，可点）0 （灰，点中）\r\n * 输出：\r\n * \r\n * \r\n * todo：他应该接收一个 props 函数，接收输出。也就是被点击后的状态。\r\n *      通过 props 接收也可以，通过 context api 接收也可以。\r\n */\r\nclass BidCard extends Component {\r\n  render() {\r\n    const bgcolor = { PASS: '#88FF88', X: '#FF8888', XX: '#FF3333', ALERT: '#8888FF' };\r\n    // const width = { PASS: '23.3vh', X: '11.4vh', XX: '11.4vh', ALERT: '11.4vh' };\r\n    const width = { PASS: '17.35vh', X: '8.5vh', XX: '8.5vh', ALERT: '8.5vh' };\r\n    const style = {\r\n      backgroundColor: `${bgcolor[this.props.name]}`,\r\n      width: `${width[this.props.name]}`,\r\n    }\r\n    let animation = {};\r\n    if (this.props.active === 0)\r\n      animation && (animation['brightness'] = 0.6);\r\n    if (this.props.active === 1) {\r\n      animation && (animation['brightness'] = 1);\r\n    }\r\n    return (\r\n      <Motion animation={animation} className='bidcard'>\r\n        <div className='cn1' onClick={this.props.onclick} style={style}>\r\n          <img className='suit' src={`cards/bids/${this.props.name}.svg`} />\r\n        </div>\r\n      </Motion>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BidPanel;","import React, { Component } from 'react';\r\nimport './Headers.css'\r\n/**\r\n * 结果直接写在　生命周期函数里 异步获取即可。\r\n */\r\nclass Imps extends Component {\r\n    render(){\r\n        return(\r\n            <div className='imps'>\r\n                <div className='iheader'>IMPs</div>\r\n                <div className='ibody'>NS:-4.8<br />EW:4.8</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/**\r\n * s1-s4  NWES\r\n */\r\nclass Seats extends Component{\r\n    render(){\r\n        const vuls = {EW:'',SN:''};\r\n        const dealer = {N:'',E:'',S:'',W:''};\r\n        dealer[this.props.dealer] = this.props.logicDealer + '-Dealer';\r\n        if( this.props.vul.toUpperCase()==='BOTH'){\r\n            vuls['EW'] = 'hasVul';\r\n            vuls['SN'] = 'hasVul';\r\n        }else{\r\n            vuls[this.props.vul.toUpperCase()] = 'hasVul';\r\n        }\r\n\r\n        return( \r\n            <div className='seats'>\r\n                <div className ='sequence'>{this.props.sequence}</div>\r\n                <div className={'s1 '+vuls['SN']}>{dealer['N']}</div>\r\n                <div className={'s2 '+vuls['EW']}>{dealer['W']}</div>\r\n                <div className={'s3 '+vuls['EW']}>{dealer['E']}</div>\r\n                <div className={'s4 '+vuls['SN']}>{dealer['S']}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Tricks extends Component{\r\n    static defaultProps = {\r\n            data:{\r\n                winEW:0,\r\n                winSN:0,\r\n                contract:'',\r\n                declarer:''\r\n            }\r\n        };\r\n    render(){\r\n        const winEW = this.props.data.winEW;\r\n        const winSN = this.props.data.winSN;\r\n        const contract = this.props.data.contract;\r\n        const declarer = this.props.data.declarer;\r\n        return(\r\n            <div className='tricks'>\r\n                <div className='s1'><br />SN<br />{winSN}</div>\r\n                <div className='s2'><div>庄:{declarer}</div>{contract}</div>\r\n                <div className='s3'>EW{winEW}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport {Imps, Seats, Tricks}","import React, { Component } from 'react';\nimport './Prepare.css'\nimport { inject, observer } from 'mobx-react';\nimport Position from '../../common/Position';\n@inject('tableStore')\n@observer\nclass Prepare extends Component {\n    /**\n     * 四个按钮的顺序为：ESWN\n     * <button className=\"ready\" ready(0)>准备/就绪</button>\n     * 四个按钮方位定位是死的。具体对应的玩家 利用 position 进行转圈。\n     */\n    render() {\n        const state = ['准备', '就绪'];\n        const clsName = ['', 'ready'];\n        const user = this.props.tableStore.state.user;\n\n        const myseat = this.props.tableStore.myseat;\n        const lsto = new Position('S').lsto(myseat);\n        const ArrPrepare = \"ESWN\".split('').map((seat,ind) => {\n            const pos = new Position(seat).lshift(lsto);\n            const ready = user[pos.sn].ready;\n            const cls = clsName[ready];\n            return <button key={ind} className={cls}\n                onClick={() => this.props.ready(pos.sn)}>\n                {state[ready]}</button>\n        });\n        return (\n            <div className='prepare'>\n                {ArrPrepare}\n            </div>\n        )\n    }\n}\nexport default Prepare","import React from 'react';\r\nimport './UserTag.css'\r\nimport Position from '../../common/Position';\r\n\r\n/**\r\n *  根据用户数据 user 和 我的 位置数据 对位置安排进行旋转。\r\n */\r\nconst UserTags = ({ user, myseat, hcp=null }) => {\r\n    const myPos = new Position('S');\r\n    const lsto = myPos.lsto(myseat);\r\n    const userN = user[new Position('N').lshift(lsto).sn];\r\n    const userE = user[new Position('E').lshift(lsto).sn];\r\n    const userS = user[new Position('S').lshift(lsto).sn];\r\n    const userW = user[new Position('W').lshift(lsto).sn];\r\n\r\n    const showhcp = hcp ? <div>高花点：{hcp}</div>: null;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='userTag'><div className='seat'>\r\n                <UserTag position='E' user={userE} />\r\n            </div></div>\r\n            <div className='userTag'><div className='seat'>\r\n                <div className='hcp'>{showhcp}</div>\r\n                <UserTag position='S' user={userS} />\r\n            </div></div>\r\n            <div className='userTag'><div className='seat'>\r\n                <UserTag position='W' user={userW} />\r\n            </div></div>\r\n            <div className='userTag'><div className='seat'>\r\n                <UserTag position='N' user={userN} />\r\n            </div></div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nclass UserTag extends React.Component {\r\n    render() {\r\n        const user = this.props.user;\r\n        // const tableStore = this.props.tableStore;\r\n        const position = this.props.position;\r\n        let seName = '';\r\n        if (position === 'N') seName = '同伴';\r\n        else if (position === 'S') seName = '我';\r\n        else seName = '对手';\r\n        const login = <div>\r\n            <div className='uname'>\r\n                <b>{user.seat}</b>:{user.name}<sub>（{seName}）</sub></div>\r\n            <div className='urank'>等级：{user.rank}</div>\r\n        </div>\r\n        const noLogin = <div><div className='uname'>未登录</div></div>\r\n\r\n        return (\r\n            <div className='UserTag'>\r\n                <div className='face'>\r\n                    <div className={position + 'clock' + ' clock'}></div>\r\n                    <img src={user.face} />\r\n                </div>\r\n                {user.name ? login : noLogin}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserTags;","import React from 'react';\r\nimport style from './Timer.module.css'\r\n\r\n/*\r\n修改为 分秒计时。如果计时结束修改为负数。\r\n*/\r\n\r\nexport default class Timer extends React.Component {\r\n    static defaltProps = {\r\n        time:90\r\n    }\r\n    seats = '';\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.timer = null;\r\n        const {time} = props \r\n        this.state = {\r\n            sec : time * 60,\r\n            ew  : 0,\r\n            sn  : 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.start('ew');\r\n    }\r\n    get hour(){\r\n        let h =parseInt(this.state.sec/60 /60)\r\n        if(h===0) return \"00\" ;\r\n        if(h > 9) return h;\r\n        return \"0\"+h\r\n     }\r\n    get min(){\r\n       let min =parseInt(this.state.sec/60%60)\r\n       if(min===0) return \"00\" \r\n       return min > 9 ? min : \"0\" + min\r\n    }\r\n    get sec(){\r\n        let sec =parseInt(this.state.sec%60)\r\n        if(sec===0) return \"00\" \r\n        return sec > 9 ? sec : \"0\" + sec\r\n     }\r\n\r\n     get ewTime(){\r\n         const {ew} = this.state;\r\n         var sec = ew % 60 > 9 ? ew % 60 : \"0\" + ew % 60\r\n         var min = parseInt(ew/60) % 60;\r\n         min = min>9 ? min : \"0\"+min\r\n         return  min + \":\" + sec\r\n     }\r\n     get snTime(){\r\n        const {sn} = this.state\r\n        var sec = sn % 60 > 9 ? sn % 60 : \"0\" + sn % 60\r\n        var min = parseInt(sn/60) % 60;\r\n        min = min>9 ? min : \"0\"+min\r\n        return  min + \":\" + sec\r\n    }\r\n    start = (seats) => {\r\n        this.seats = seats;\r\n        if(this.timer) clearInterval(this.timer)\r\n        this.timer =  setInterval((seats)=>{\r\n            let seat = this.seats\r\n            this.setState({\r\n                sec:this.state.sec -1,\r\n                [seat] : this.state[seat ] + 1\r\n            })\r\n        },1000)\r\n    }\r\n\r\n    stop = () => {\r\n        clearInterval(this.timer);\r\n        this.timer = 0;\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={style.timername}>{this.props.name}</div>\r\n                <div className={style.timer}>\r\n                    <div>{this.hour}</div>\r\n                    <div>{this.min}</div>\r\n                    <div>{this.sec}</div>\r\n                </div>\r\n                <div className={style.timer1}>\r\n                对手：{this.ewTime}<br />\r\n                我方：{this.snTime}<br />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","/**\r\n * card_str  N  E S W  S H D C\r\n * card_str: \"J8.Q9865.QJ43.KJ AT5.J732.752.QT8 KQ97.AT.86.A9743 6432.K4.AKT9.652\"\r\n */\r\n\r\n/**\r\n * 牌型分布\r\n * [{\r\n *      name: 张三，\r\n *      card:['J8',\"Q9865\",\"QJ43\",\"KJ\"]\r\n * },\r\n * {\r\n *       name: 李四，\r\n *      card:['J8',\"Q9865\",\"QJ43\",\"KJ\"]\r\n * },\r\n * {\r\n * name: 张三，\r\n *      card:['J8',\"Q9865\",\"QJ43\",\"KJ\"]\r\n * },\r\n * {\r\n * }\r\n * ]\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport {Row, Col, Table,Drawer, Select} from 'antd';\r\nconst Option = Select.Option;\r\n\r\nconst club ='/cards/club.svg';\r\nconst  diamond ='/cards/diamond.svg';\r\nconst heart ='/cards/heart.svg';\r\nconst spade ='/cards/spade.svg';\r\n\r\n// const suits=[\r\n//     <img src={spade} style={{width:\"12px\"}}/>,\r\n//     <img src={club} style={{width:\"12px\"}}/>,\r\n//     <img src={heart} style={{width:\"12px\"}}/>,\r\n//     <img src={diamond} style={{width:\"12px\"}}/>,\r\n// ]\r\n// 牌型分布\r\nconst DefalutCards = [{\r\n    name: \"张三\",\r\n    card:['J8',\"Q9865\",\"QJ43\",\"KJ\"]\r\n},{\r\n    name: \"李四\",\r\n    card:['J8',\"Q9865\",\"QJ43\",\"KJ\"]\r\n},{\r\n    name: \"王五\",\r\n    card:['J8',\"Q9865\",\"QJ43\",\"KJ\"]\r\n},{\r\n    name: \"赵六\",\r\n    card:['J8',\"Q9865\",\"QJ43\",\"KJ\"]\r\n}]\r\nfunction suits(suit,num){\r\n   return (<span style={{height:\"12px\",display:\"inline-block\"}}><img src={suit} style={{width:\"12px\",height:\"12px\"}}/>{num}</span>)\r\n}\r\nconst callData=[\r\n    [\"-\",\"H2\",\"Pass\",\"Pass\"],\r\n    [\"Pass\"]\r\n]\r\nconst callColumns=[{\r\n    title:'北',\r\n    dataIndex:'0',\r\n    key:'north',\r\n    align:'center'\r\n},{\r\n    title:'东',\r\n    dataIndex:'1',\r\n    key:'earth',\r\n    align:'center'\r\n},{\r\n    title:'南',\r\n    dataIndex:'2',\r\n    key:'south',\r\n    align:'center'\r\n},{\r\n    title:'西',\r\n    dataIndex:'3',\r\n    key:'west',\r\n    align:'center'\r\n}];\r\n\r\nconst resultColumns=[\r\n    {title:'No',dataIndex:'sequence',key:'sequence'},\r\n    {title:'结果',dataIndex:'result',key:'result'},\r\n    {title:'NS',dataIndex:'ns_point',key:'ns_point'},\r\n    {title:'EW',dataIndex:'ew_point',key:'ew_point'},\r\n    {title:'南北IMP',dataIndex:'nsimp',key:'nsimp'},\r\n    {title:'东西IMP',dataIndex:'ewimp',key:'ewimp'},\r\n];\r\n\r\nconst processColumns=[{\r\n    title:'北',\r\n    dataIndex:'0',\r\n    key:'north',\r\n    align:'center'\r\n},{\r\n    title:'东',\r\n    dataIndex:'1',\r\n    key:'earth',\r\n    align:'center'\r\n},{\r\n    title:'南',\r\n    dataIndex:'2',\r\n    key:'south',\r\n    align:'center'\r\n},{\r\n    title:'西',\r\n    dataIndex:'3',\r\n    key:'west',\r\n    align:'center'\r\n},{\r\n    title:'北',\r\n    dataIndex:'4',\r\n    key:'north1',\r\n    align:'center'\r\n},{\r\n    title:'东',\r\n    dataIndex:'5',\r\n    key:'earth1',\r\n    align:'center'\r\n},{\r\n    title:'南',\r\n    dataIndex:'6',\r\n    key:'south1',\r\n    align:'center'\r\n},{\r\n    title:'西',\r\n    dataIndex:'7',\r\n    key:'west1',\r\n    align:'center'\r\n}];\r\nconst processData=[\r\n    [\"-\",\"H2\",\"H2\",\"H2\",\"H2\",\"H2\"]\r\n]\r\n\r\n@inject('tableStore')\r\n@observer\r\nclass Play extends Component{\r\n    state = { sequence: 1 };\r\n    showDrawer = () => {\r\n        this.props.tableStore.showHistory()\r\n      };\r\n    onClose = () => {\r\n        this.props.tableStore.hideHistory()\r\n    };\r\n\r\n    handleChange =(value) => {\r\n        console.log(`selected ${value}`);\r\n        this.setState({ sequence: value })\r\n    }\r\n   render(){\r\n        console.log(this.props.tableStore.record)\r\n       \r\n        const {auction,cards,tricks} = this.props.tableStore.record[this.state.sequence-1] ||{auction:\"\",cards:\"\",tricks:\"\"}  //处理第一幅牌的情况\r\n        const result = this.props.tableStore.record_result;\r\n\r\n      \r\n       return(\r\n           <div style={{width:'50vh',margin:'0 auto'}}>\r\n                \r\n                <Drawer\r\n                    title=\"历史记录\"\r\n                    placement=\"right\"\r\n                    width=\"60%\"\r\n                    height=\"100%\"\r\n                    bodyStyle={{backgroundColor:\"#0A678A\",height:\"100%\"}}\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.props.tableStore.history}\r\n                > \r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <Result result={result}/>\r\n                        </Col>\r\n                        <Col span={10} push={1}>\r\n                            <Cards cards={cards}/>\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Select defaultValue={1} style={{ width: 120 }} onChange={this.handleChange}>\r\n                                {this.props.tableStore.record.map((item,ind)=>{\r\n                                    let value = ind + 1;\r\n                                    return <Option value={value} key={ind} >第{value}副  </Option>\r\n                                })}\r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col span={12}>\r\n                        <Bid auction={auction}/>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <PlayProcess tricks = {tricks}/>\r\n                    </Col>\r\n                </Row>\r\n                   \r\n                </Drawer>\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\n\r\nclass Cards extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        const CARDS = this.props.cards.length ? this.props.cards :DefalutCards;\r\n        console.log(CARDS)\r\n        return(\r\n            <React.Fragment>\r\n                <h2 style={{textAlign:'center'}}>牌型分布</h2>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <div>局况</div>\r\n                        <div>无双</div>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <div>{CARDS[0][\"name\"]}</div>\r\n\r\n                        <div>{suits(spade)} {CARDS[0][\"card\"][0]}</div>\r\n                        <div>{suits(heart)}{CARDS[0][\"card\"][1]}</div>\r\n                        <div>{suits(diamond)} {CARDS[0][\"card\"][2]}</div>\r\n                        <div>{suits(club)} {CARDS[0][\"card\"][3]}</div>\r\n                    </Col>\r\n                    <Col span={8}></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <div>{CARDS[1][\"name\"]}</div>\r\n                        <div>{suits(spade)} {CARDS[1][\"card\"][0]}</div>\r\n                        <div>{suits(heart)}{CARDS[1][\"card\"][1]}</div>\r\n                        <div>{suits(diamond)} {CARDS[1][\"card\"][2]}</div>\r\n                        <div>{suits(club)} {CARDS[1][\"card\"][3]}</div>\r\n                    </Col>\r\n                    <Col span={8}></Col>\r\n                    <Col span={8}>\r\n                        <div>{CARDS[2][\"name\"]}</div>\r\n                        <div>{suits(spade)} {CARDS[2][\"card\"][0]}</div>\r\n                        <div>{suits(heart)}{CARDS[2][\"card\"][1]}</div>\r\n                        <div>{suits(diamond)} {CARDS[2][\"card\"][2]}</div>\r\n                        <div>{suits(club)} {CARDS[2][\"card\"][3]}</div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={8}></Col>\r\n                    <Col span={8}>\r\n                        <div>{suits(spade)} {CARDS[3][\"card\"][0]}</div>\r\n                        <div>{suits(heart)}{CARDS[3][\"card\"][1]}</div>\r\n                        <div>{suits(diamond)} {CARDS[3][\"card\"][2]}</div>\r\n                        <div>{suits(club)} {CARDS[3][\"card\"][3]}</div>\r\n                        <div>{CARDS[3][\"name\"]}</div>\r\n                    </Col>\r\n                    <Col span={8}></Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nlet resultData = [\r\n    {sequence:1,result:\"W H3\",ew_point: 0,ns_point: 50,nsimp:'',ewimp:1},\r\n] \r\nclass Result extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h2 style={{textAlign:'center'}}>打牌结果</h2>\r\n                <Table  rowClassName=\"aaa\" columns={resultColumns} size='middle' dataSource={resultData} bordered={true} pagination={false}/>\r\n            </React.Fragment>\r\n            \r\n        )\r\n       \r\n    }\r\n}\r\n\r\nclass Bid extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h2 style={{textAlign:'center'}}>叫牌过程</h2>\r\n                <Table size='middle' columns={callColumns} dataSource={callData} pagination={false} bordered />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nclass PlayProcess extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <h2 style={{textAlign:'center'}}>打牌过程</h2>\r\n                <Table size='middle'   columns={processColumns} dataSource={processData} pagination={false} bordered />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Play","import { Drawer, Button } from 'antd';\r\nimport React from 'react'\r\nimport 'antd/dist/antd.css';\r\nimport BidPanel from './BidPanel'\r\nimport { inject, observer } from 'mobx-react';\r\nimport \"./InfoDrawer.css\"\r\nimport Card from '../../components/Card';\r\n\r\n@inject('tableStore')\r\n@observer\r\nclass InfoDrawer extends React.Component {\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.props.tableStore.toggleInfo()\r\n  };\r\n\r\n  render() {\r\n    const {InfoDrawer} = this.props.tableStore\r\n    return (\r\n      <div>\r\n        \r\n        <Drawer\r\n          title=\"本局信息\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={this.onClose}\r\n          visible={InfoDrawer}\r\n          className=\"infoDrawer\"\r\n          width=\"45.2vh\"\r\n        >\r\n          {this.props.tableStore.state.scene > -1 ? <BidPanel /> : null}\r\n          {/* <p style={{position:\"absolute\",bottom:\"40vh\",width:\"100%\"}}><h4>上一墩</h4></p> */}\r\n          <div className=\"ant-drawer-header\" style={{position:\"absolute\",bottom:\"32vh\",width:\"100%\"}}><b>上一墩</b></div>\r\n          <p><LastTricks /></p>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 这里需要注意 zIndex 是否给出。\r\n */\r\n@inject('tableStore')\r\n@observer\r\nclass LastTricks extends React.Component {\r\n  render(){\r\n    const bSize = this.props.tableStore.height;\r\n    //const bSize = this.props.tableStore.center.x*2;\r\n    const board = this.props.tableStore.board;\r\n    const seatPos = this.props.tableStore.seat;\r\n    const cards = board[1] && board[1].map((item,index)=>{\r\n      // width:45.2vh 也就是 bSize*45.2%\r\n      // const x = seatPos[item.seat][1].x - item.size / 2.9 - 170;\r\n      // const y = seatPos[item.seat][1].y - item.size / 2.9\r\n      const x = seatPos[item.seat][1].x - bSize/2 + bSize*0.252/2\r\n      const y = seatPos[item.seat][1].y - bSize/2 + bSize*0.252/4\r\n      const rotate = ('EW'.indexOf(item.seat) !== -1) ? -90:0;\r\n      const offset = item.size * 0.7 / 2\r\n      return  {\r\n        card:item.card,\r\n        size:item.size,\r\n        position:{x:x,y:y},\r\n        animation:{\r\n          top:y,\r\n          lef:x,\r\n          duration:0,\r\n          rotate:rotate,\r\n          transformOrigin: `${offset}px ${offset}px`\r\n        },\r\n        active:item.active,\r\n        onclick:()=>null,\r\n        key:index,\r\n        index:index,\r\n        seat:item.seat,\r\n        zIndex:item.zIndex\r\n      }\r\n    })\r\n    const Cards = cards && cards.map((item,index)=>{\r\n      return <Card\r\n        active={item.active}\r\n        onClick={item.onclick}\r\n        key={item.key}\r\n        index={item.key}\r\n        seat={item.seat}\r\n        animation={item.animation || ''}\r\n        card={item.card}\r\n        size={item.size}\r\n        position={item.position}\r\n        zIndex={item.zIndex}\r\n        //zIndex={50+index}\r\n      />\r\n    }).slice(0)\r\n    return(<div style={{border:\"0px solid #FF0000\",\r\n      position:\"absolute\",\r\n      width:\"25.2vh\",\r\n      height:\"20vh\",\r\n      bottom:\"3vh\",\r\n      left:\"10vh\"}}>\r\n      {Cards}\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default InfoDrawer;","/**\r\n * TableView 组件\r\n *    输入参数：table\r\n *    输出：加载各个界面元素，显示界面。\r\n * \r\n * Debug 纯视图组件\r\n */\r\nimport React from 'react';\r\nimport Debug from './Debug'\r\nimport Claim from './Claim'\r\nimport BidPanel from './BidPanel'\r\nimport { Seats, Tricks } from './Headers'\r\nimport Prepare from './Prepare'\r\nimport UserTags from './UserTag'\r\nimport Timer from './Timer'\r\nimport Card from '../../components/Card';\r\nimport Record from '../../components/Record';\r\nimport './TableView.css'\r\nimport { inject, observer } from 'mobx-react';\r\nimport InfoDrawer from './InfoDrawer';\r\n/**\r\n * 用来模拟 table 对象保证 tableview 组件可独立测试。\r\n  */\r\nconst _tableObj = {\r\n  cards: [],\r\n  state: {\r\n    scene: 0,\r\n    calldata: [['1C', '2C', 'PASS', 'PASS'], ['3H', 'PASS', 'PASS', '4NT'], ['PASS', 'PASS', 'PASS', '']],\r\n    user: {\r\n      E: { ready: 0, name: '张三', face: '/imgs/face1.png', rank: '大师' },\r\n      S: { ready: 0, name: '李四', face: '/imgs/face2.png', rank: '专家' },\r\n      W: { ready: 0, name: '王五', face: '/imgs/face1.png', rank: '王者' },\r\n      N: { ready: 0, name: '赵六', face: '/imgs/face2.png', rank: '钻石' }\r\n    },\r\n  },\r\n  ref: { E: null, S: null, W: null, N: null },\r\n  openDebug: e => null,\r\n  debug: e => null,\r\n  lastTrick: e => null,\r\n  timer: { stop: e => null, start: e => null },\r\n  claim: e => null,\r\n  bid: e => null,\r\n}\r\n\r\n\r\n/**\r\n * TableView 的用途\r\n * 增加 TableView 的目的是 把 牌桌的排版进行单独设置。增加view1,2,3\r\n * 本代码原本是在 Table 的 render 里写的。\r\n * 完整 copy 到这里，然后替换 this 为 props.table 进行简单的替换完成。\r\n * \r\n * 单元测试：\r\n * 开启：//const table = _tableObj;\r\n */\r\n@inject('tableStore')\r\n@observer\r\nclass TableView extends React.Component {\r\n  /* 这里应该对 props 做处理，提高 view 的独立性。\r\n    换句话说，这里对入口数据进行判断。如果入口数据有错误，照样正常显示view\r\n    比如用模拟数据。\r\n  */\r\n  render() {\r\n    console.log(111)\r\n    const props = this.props;\r\n    const table = props.table;\r\n    const tableStore = props.tableStore;\r\n    window.__tableStore = tableStore\r\n    let cards = tableStore.state.cards;\r\n    cards = cards ? Card.createComponents(cards) : null;\r\n    const stat = Object.values(tableStore.state.user).map(e => e.ready);\r\n    const tricks = {\r\n      winEW:tableStore.state.winEW,\r\n      winSN:tableStore.state.winSN,\r\n      contract:tableStore.state.contract,\r\n      declarer:tableStore.state.declarer\r\n    }\r\n    const claimBtnClickable =   tableStore.state.claimAble && tableStore.state.declarer===tableStore.myseat;\r\n    const hcp = tableStore.scene === 1 ? tableStore.hcp : null;\r\n    return (\r\n      <div>\r\n        {(tableStore.state.scene===1) ?\r\n          <div className='panel'>\r\n            <BidPanel />\r\n          </div> : null\r\n        }\r\n        <div id='table' className='table'>\r\n          <div id='header' className='header'>\r\n            {/* <div className='re imps'><Imps /></div> */}\r\n            <div onClick={table.openDebug} className='re seats'><Seats dealer={tableStore.dealer} logicDealer={tableStore.logicDealer} vul={tableStore.state.vulnerable} sequence={tableStore.sequence} /></div>\r\n            <div onClick={table.lastTrick.bind(table)} className='re tricks'><Tricks data={tricks} /></div>\r\n            <div className='re time'>\r\n              <Timer\r\n                name='剩余时间'\r\n                handle={table.timer}\r\n                time= {90}\r\n                callback={() => console.log('计时结束')} />\r\n            </div>\r\n            <button onClick={claimBtnClickable ? table.claim :()=>{}} className={claimBtnClickable?\"claimbtn\":\"claimbtn disable\"} >摊牌</button>\r\n            <button onClick={table.lastTrick.bind(table)} className=\"lasttrick\">上一墩牌</button>\r\n            <button onClick={table.showInfo}>信息面板</button>\r\n            <button onClick={table.history.bind(table)} className=\"showbid\">历史记录</button>\r\n            {/* <div className='re' id='lastTrick'>上墩牌</div>*/}\r\n            {/* 注意比赛结果会挂载到下面的div */}\r\n            <div id='result'></div>\r\n            <div id='sound'></div>\r\n          </div>\r\n\r\n          <div id='body' className='body'>\r\n            {tableStore.state.lastTrick ? <div id='lastTrick' className='lastTrick'>33333</div> : null}\r\n            {/* onSubmit 不需要了 */}\r\n            {tableStore.state.scene === 3 ?\r\n              <Claim number='8' onSubmit={table.handleClaim} /> \r\n              : null}\r\n            <div id='clock'></div>\r\n            <div id='north' className='north' ref={table.ref.N}></div>\r\n            <div id='east' className='east' ref={table.ref.E}></div>\r\n            <div id='south' className='south' ref={table.ref.S}></div>\r\n            <div id='west' className='west' ref={table.ref.W}></div>\r\n            <div id='board' className='board' ref={table.ref.board}>\r\n              <UserTags user={tableStore.state.user} myseat={tableStore.myseat} hcp={hcp}/>\r\n              {tableStore.state.scene === 0 ? <Prepare stat={stat} ready={table.handleReady} /> : null}\r\n            </div>\r\n            {cards}\r\n          </div>\r\n          {tableStore.state.debug ? <Debug o={table} /> : null}\r\n          <Record/>\r\n          <InfoDrawer/>\r\n          <div id='footer' className='footer'>\r\n            <div id='video'></div>\r\n            <div id='userlist'>\r\n              <table>\r\n                <tr>\r\n                  <td>队员1</td><td></td><td>等级</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>队员2</td><td></td><td>等级</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>队员3</td><td></td><td>等级</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>队员4</td><td></td><td>等级</td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div id='message' className='message'>\r\n              <div id='msg'>聊天窗口</div>\r\n              <div>\r\n                <input id='msginput' type='text' defaultValue='请输入……' />\r\n                {/* <input id='msgbtn' type='button' value='发送' onClick={table.testChat} /> */}\r\n              </div>\r\n            </div>\r\n            <div id='advertising'></div>\r\n          </div>\r\n          <div id='ad'></div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n}\r\nexport default TableView;","/**\r\n * Game  是一局比赛，涉及到了比赛者，以及和比赛相关的其他信息。重点在于比赛。\r\n * Table 是一桌游戏的界面：重点在于 一桌\r\n * \r\n * <TableView table={this} />\r\n *  把控制器直接给到 view 也就是说控制器的事件处理和 state 都给到了view\r\n *  event 和 state 就是  view 的输入数据。\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Sound from './Sound';\r\nimport TableView from '../views/pc/TableView'; // 包含 TableView.css\r\nimport ResultPanel from '../views/pc/ResultPanel';\r\nimport { inject, observer } from 'mobx-react';\r\nimport GameProcess from  \"../models/controler\"\r\nimport { ACT1 } from '../components/Card';\r\nimport Position from '../common/Position';\r\n/**\r\n * Table 一桌游戏\r\n *      1 是牌桌的容器组件，或者说是控制器组件(MVC)\r\n *      2 state       ：数据由 模型计算提供。\r\n *      3 事件        ：处理函数,主要是触发 setState。\r\n *      4 通过 context api 把 state 保存起来（暂时没用到）\r\n *      5 调用 tableview 显示界面。\r\n * this.TableModel 是模型组件。\r\n *      所有数据计算，尤其是 state 的计算，都在这里进行。控制器调用。\r\n */\r\n@inject('tableStore')\r\n@observer\r\nclass Table extends Component {\r\n    /**\r\n     * 重构参考： 打牌的几个阶段，应该在规则里面，调入进来。\r\n     * 属性列表：\r\n     *  scene: 1 叫牌，2 打牌 3 claim 4 展示比分\r\n     *  deals: 牌，除了自己的牌，其他人的牌应该不显示\r\n     *  seat：ESWN 自己做在那个方位。\r\n     *  csize: 牌的大小 手机 80像素比较合适。\r\n     *  board：桌面上打出来的四张牌。用于清理桌面。\r\n     * \r\n     * 其他：\r\n     * \r\n     *  字体大小：fontSize:this.height * 0.04 + 'px'\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = {};\r\n        //TableModel.seats.forEach(key => this.ref[key] = React.createRef())\r\n        Position.SNames.split(\"\").forEach(key => this.ref[key] = React.createRef());\r\n        this.ref.board = React.createRef();\r\n        this.timer = { stop: null, start: null }; // 用于控制 倒计时\r\n    }\r\n\r\n    /**\r\n     * 完成挂载后，要计算 各个位置的坐标。\r\n     * _initSeat 初始化 发牌位置 出牌位置等坐标\r\n     */\r\n    componentDidMount() {\r\n        this._initSeat(); //\r\n        window.__INITSEAT = this._initSeat.bind(this)\r\n    }\r\n\r\n\r\n    /**\r\n    * 根据dom 定位 初始化 发牌位置 出牌位置 坐标\r\n    * const center 为桌子中心\r\n    * const seats  为四个发牌区域div 左上角坐标\r\n    * \r\n    * 注意 控制器（本代码）里包含和 dom 打交道的代码。Model 里尽可能都是纯函数\r\n    * 计算结果保存在 TableModel.seat 里面，包含发牌位置，和出牌位置\r\n    * 把两个 dom 定位（xy） 发给模型用于计算。Model 中应该尽可能是纯函数\r\n    * 计算结果保存到 TableModel.seat 里面，包含发牌位置，和出牌位置\r\n    * TableModel.initSeat(center, seats)\r\n    */\r\n    _initSeat() {\r\n        const center = {\r\n            x: this.ref.board.current.offsetTop +\r\n                this.ref.board.current.clientHeight / 2,\r\n            y: this.ref.board.current.offsetLeft +\r\n                this.ref.board.current.clientWidth / 2\r\n        };\r\n        const seats = {\r\n            'E': { x: 0, y: 0 }, 'S': { x: 0, y: 0 },\r\n            'W': { x: 0, y: 0 }, 'N': { x: 0, y: 0 },\r\n        }\r\n        for (let key in seats) {\r\n            seats[key]['y'] = this.ref[key].current.offsetTop;\r\n            seats[key]['x'] = this.ref[key].current.offsetLeft;\r\n        }\r\n\r\n        this.props.tableStore.initSeat(center, seats)\r\n    }\r\n    /**\r\n     * \r\n     * 清理 出牌区域（4张牌）\r\n     * 调用：\r\n     * 输入：\r\n     * 输出：\r\n     */\r\n    clearBoard = () => {\r\n        this.props.tableStore.clearBoard();\r\n        Sound.play('clear');\r\n    }\r\n\r\n    /**\r\n     * 打出一张牌 TODO: 最值得优化的一个函数。\r\n     * @param {index} 52张牌的编号0 - 51\r\n     */\r\n    play = (index) => {\r\n        const _play = function () {\r\n            const card = this.props.tableStore.getCardByIndex(index);\r\n            if (card.active === ACT1.LC) {\r\n                this.props.tableStore.preplay(card);\r\n            } else if (card.active === ACT1.LCO) {\r\n                this.props.tableStore.play(card);\r\n                Sound.play('play');\r\n                if (this.props.tableStore.board.length === 4) setTimeout(this.clearBoard, 1000)\r\n            } else return;\r\n        }\r\n        return _play.bind(this);\r\n    }\r\n\r\n    /**\r\n     * 触发 claim\r\n     * 考虑增加参数为 seat\r\n     */\r\n    claim = () => {\r\n        //this.props.tableStore.claim('E',3);\r\n        this.props.tableStore.claim('S', '东（E）玩家摊牌，定约：3NT + 3');\r\n        // Sound.play('claim');\r\n    }\r\n\r\n    /**\r\n     * seat 界面方位。\r\n     */\r\n    openDummy = () => {\r\n        const seat = \"E\";\r\n        const cards = ['SQ', 'SJ', 'S9', 'S8', 'HA', 'H5', 'DJ', 'D8', 'D3', 'CT', 'C4', 'CT', 'C4'];\r\n        this.props.tableStore.openDummy(seat, cards);\r\n    }\r\n    /**\r\n     * 预留发送 数据接口\r\n     */\r\n    handleClaim = () => {\r\n        console.log('发送　claim 请求。');\r\n        console.log('接收到，同意设置　scene=4,不同意，设置为２');\r\n    }\r\n    /**\r\n     * 用户准备\r\n     * \r\n     * 接受一个用户编号。考虑修改为座位\r\n     * \r\n     * 输入：0-3 代表 四个位置\r\n     * 输出：\r\n     *      this.state.user[seat].ready = 1; 某个用户准备好\r\n     *      this.state.scene = 1; 场景切换\r\n     *      this.deal() 发牌\r\n     *      setState 触发渲染\r\n     */\r\n    handleReady = (se) => {\r\n        //this.TableModel.userReady(se);\r\n        this.props.tableStore.userReady(se);\r\n        if (this.props.tableStore.userAllReady()) {\r\n            this.props.tableStore.state.scene = 1;\r\n            this.deal();\r\n           \r\n            setTimeout(()=>{\r\n                this.autoCall()\r\n            },2000)\r\n        }\r\n    }\r\n    /**\r\n     * 发牌\r\n     * 调用：\r\n     * 输出：TableModel.dealCards() 返回 cards 的位置和出牌绑定\r\n     */\r\n    deal = () => {\r\n        this.props.tableStore.initCards(this.props.tableStore.deals)\r\n        setTimeout(this.props.tableStore.dealCards,10);\r\n        this.props.tableStore.scene = 1;\r\n        Sound.play('deal')\r\n    }\r\n\r\n    showResult = () => {\r\n        const result = document.querySelector('.result');\r\n        if (!result)\r\n            ReactDOM.render(<ResultPanel />, document.querySelector('#result'))\r\n    }\r\n\r\n    /**\r\n     * 显示上一墩牌\r\n     * 桌面上始终52张牌，因此要显示上一墩牌，需要调整某些牌的位置。\r\n     * cards: this.TableModel.lastTrick(show),\r\n     */\r\n    lastTrick = () => {\r\n        //this.props.tableStore.showLastTrick();\r\n        this.props.tableStore.toggleLastTrick();\r\n    }\r\n    /**\r\n     * 视频接口\r\n     * @param {*} channel  频道名\r\n     */\r\n    _initVideo(channel) {\r\n        // eslint-disable-next-line\r\n        var api = streamApi();\r\n    }\r\n    /**\r\n     * 是否调试模式\r\n     * {table.state.debug ? <Debug o={table} /> : null}\r\n     */\r\n    openDebug = () => {\r\n        const debug = this.props.tableStore.state.debug;\r\n        this.props.tableStore.state.debug = !debug;\r\n    }\r\n    /**\r\n     * 显示叫牌\r\n     * 根据 场景 scene 决定是否显示叫牌。\r\n     */\r\n    bid = () => {\r\n        this.props.tableStore.toggleBid();\r\n        //this.props.tableStore.toggleBid(this.props.tableStore.bidState.showBlock);\r\n    }\r\n    showInfo = () => {\r\n        this.props.tableStore.toggleInfo();\r\n        //this.props.tableStore.toggleBid(this.props.tableStore.bidState.showBlock);\r\n    }\r\n    /**\r\n     * 重新链接 复盘\r\n     */\r\n    recovery = () => {\r\n        this.props.tableStore.recovery();\r\n    }\r\n    reConnect = () => {\r\n        this.props.tableStore.reConnect()\r\n    }\r\n\r\n    history = () => {\r\n        this.props.tableStore.showHistory()\r\n    }\r\n    autoCall = () => {\r\n        this.props.tableStore.state.calldata =  {\r\n            first: 'S',\r\n            call: [\r\n                ['1C =1=', 'PASS', 'PASS', '2H'],\r\n                ['PASS', 'PASS', '3C =2=', 'PASS'],\r\n                ['PASS', '3H', 'PASS', 'PASS'],\r\n                ['3S =3=', 'PASS', 'PASS', '3NT =4='],\r\n            ],\r\n            note: [\r\n                \"约定叫1：说明内容预先输入...\",\r\n                \"约定叫2：说明内容预先输入...\",\r\n                \"约定叫3：说明内容预先输入...\",\r\n                \"约定叫4：说明内容预先输入...\",\r\n            ]\r\n        }\r\n        \r\n        this.props.tableStore.toggleBid();\r\n        this.props.tableStore.curCall = \"3NT\";\r\n        setTimeout(()=>{\r\n            this.props.tableStore.state.scene = 2;\r\n        },1000)\r\n        setTimeout(()=>{\r\n            GameProcess.start()\r\n        },2000)\r\n    }\r\n    render() {\r\n        return (\r\n            <TableView table={this} />\r\n        );\r\n    }\r\n}\r\n\r\n// Table.seats = ['E', 'S', 'W', 'N'];\r\n// Table.seatsen = ['east', 'south', 'west', 'north'];\r\n// Table.seatscn = ['东', '南', '西', '北'];\r\n\r\n\r\nexport default Table;","import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport {cardImgs,imgPreLoad} from '../common/util';\r\nimport Table from './Table';\r\n/**\r\n * Game  是一局比赛，涉及到了比赛者，以及和比赛相关的其他信息。重点在于比赛。\r\n * Table 是一桌游戏的界面：重点在于 一桌\r\n */\r\n@inject('tableStore')\r\n\r\n@observer\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        /**\r\n         *  属性列表：\r\n         *  屏幕大小\r\n         */\r\n        super(props);\r\n        this.debug=false;\r\n        this.init();// 屏蔽鼠标右键\r\n        \r\n        window.__debug = this.debug;\r\n    }\r\n    /**\r\n     * 做一些初始化操作，比如屏蔽鼠标右键。\r\n     * 屏蔽下来刷新等。\r\n     */\r\n    init() {\r\n       \r\n        // 图片预加载\r\n        imgPreLoad(cardImgs());\r\n\r\n        this.props.tableStore.tableId = this.props.match.params.tableid;\r\n        if (this.debug) return;  // 去掉本行\r\n        window.document.oncontextmenu = function () {\r\n            \r\n            return true;\r\n        }\r\n        document.ondragstart=(e)=>e.preventDefault(); // 屏蔽拖拽\r\n        document.onselectstart=(e)=>e.preventDefault(); // 屏蔽选中\r\n        document.onkeydown = function (e) { // 屏蔽f5,f12 keycode === 116,123\r\n            e = window.event || e;\r\n            var keycode = e.keyCode || e.which;\r\n            if ([116,123].indexOf(keycode) !== -1) {  \r\n                if (window.event) {// ie\r\n                    try { e.keyCode = 0; } catch (e) { }\r\n                    e.returnValue = false;\r\n                } else {// firefox\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 检查用户登录 开启游戏\r\n     */\r\n    render(){\r\n        return <Table />;\r\n    }\r\n\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { Provider } from 'mobx-react';\n\nimport tableStore from './stores/tableStore';\nimport Game from './components/Game';\nconst stores = {\n  tableStore,\n};\n\n@observer\n class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Provider {...stores}>\n          <BrowserRouter  > \n            <Switch>\n              <Route path=\"/\" component={Game} />\n            </Switch>\n          </BrowserRouter>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}